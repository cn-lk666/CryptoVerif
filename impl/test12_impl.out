Doing expand get, insert... Done.
Doing simplify (non-expanded game)... No change.
Doing expand... Done.
Doing remove assignments of findcond... Done.
Doing simplify... Run simplify 2 time(s). Fixpoint reached.
Done.
Doing move all binders... Done.
Doing remove assignments of findcond... No change.
Doing merge branches... No change.
Trying equivalence suf_cma(mac)... Transf. OK Transf. done Succeeded.
Doing simplify (non-expanded game)... No change.
Doing expand... Done.
Doing remove assignments of findcond... Done.
Doing simplify... Run simplify 2 time(s). Fixpoint reached.
Done.
Doing move all binders... Done.
Doing remove assignments of findcond... No change.
Doing merge branches... No change.
Doing insert instruction let tdi_t2bitstring(x111)=x1_1 in at occurrence 99... Done.
Trying equivalence rom(hash1)... Transf. OK Transf. done Succeeded.
Doing simplify (non-expanded game)... Done.
Doing expand... Done.
Doing remove assignments of findcond... Done.
Doing simplify... Doing global dependency analysis on r_3 inside simplify... At 127, output message r_3[u_22] depends on r_3.
No change
Doing global dependency analysis on r_1 inside simplify... At 134, output message r_1 depends on r_1.
No change
Doing global dependency analysis on r_3 inside simplify... At 126, output message r_3[u_22] depends on r_3.
No change
Doing global dependency analysis on r_1 inside simplify... At 133, output message r_1 depends on r_1.
No change
Run simplify 2 time(s). Fixpoint reached.
Done.
Doing move all binders... Done.
Doing remove assignments of findcond... No change.
Doing merge branches... No change.
Doing insert instruction let tcbi_t2bitstring(x222)=x1_2 in at occurrence 157... Done.
Trying equivalence rom(hash2)... Transf. OK Transf. done Succeeded.
Doing simplify (non-expanded game)... Done.
Doing expand... Done.
Doing remove assignments of findcond... Done.
Doing simplify... Doing global dependency analysis on r_3 inside simplify... At 123, output message r_3[u_22] depends on r_3.
No change
Doing global dependency analysis on r_6 inside simplify... At 185, output message r_6[u_37] depends on r_6.
No change
Doing global dependency analysis on r_4 inside simplify... At 192, output message r_4 depends on r_4.
No change
Doing global dependency analysis on r_1 inside simplify... At 130, output message r_1 depends on r_1.
No change
Doing global dependency analysis on r_3 inside simplify... At 123, output message r_3[u_22] depends on r_3.
No change
Doing global dependency analysis on r_6 inside simplify... At 184, output message r_6[u_37] depends on r_6.
No change
Doing global dependency analysis on r_4 inside simplify... At 191, output message r_4 depends on r_4.
No change
Doing global dependency analysis on r_1 inside simplify... At 130, output message r_1 depends on r_1.
No change
Run simplify 2 time(s). Fixpoint reached.
Done.
Doing move all binders... Done.
Doing remove assignments of findcond... No change.
Doing merge branches... No change.
Trying equivalence uf_cma(sign)... Failed.
Doing remove assignments of binder ssk1... Done.
Doing remove assignments of binder spk1... Done.
Trying equivalence uf_cma(sign) with ks... Transf. OK Transf. done Succeeded.
Doing simplify (non-expanded game)... No change.
Doing expand... Done.
Doing remove assignments of findcond... Done.
Doing simplify... Doing global dependency analysis on r_3 inside simplify... At 408, output message r_3[u_22] depends on r_3.
No change
Doing global dependency analysis on r_6 inside simplify... At 467, output message r_6[u_37] depends on r_6.
No change
Doing global dependency analysis on r_4 inside simplify... At 474, output message r_4 depends on r_4.
No change
Doing global dependency analysis on r_1 inside simplify... At 415, output message r_1 depends on r_1.
No change
Doing global dependency analysis on r_3 inside simplify... At 372, output message r_3[u_22] depends on r_3.
No change
Doing global dependency analysis on r_6 inside simplify... At 431, output message r_6[u_37] depends on r_6.
No change
Doing global dependency analysis on r_4 inside simplify... At 438, output message r_4 depends on r_4.
No change
Doing global dependency analysis on r_1 inside simplify... At 379, output message r_1 depends on r_1.
No change
Run simplify 2 time(s). Maximum reached.
Done.
Doing SA rename u_13... Done.
Doing remove assignments of findcond... Done.
Doing simplify... Doing global dependency analysis on r_3 inside simplify... At 372, output message r_3[u_22] depends on r_3.
No change
Doing global dependency analysis on r_6 inside simplify... At 431, output message r_6[u_37] depends on r_6.
No change
Doing global dependency analysis on r_4 inside simplify... At 438, output message r_4 depends on r_4.
No change
Doing global dependency analysis on r_1 inside simplify... At 379, output message r_1 depends on r_1.
No change
Run simplify 1 time(s). Fixpoint reached.
No change.
Doing SA rename u_15... Done.
Doing remove assignments of findcond... No change.
Doing simplify... Doing global dependency analysis on r_3 inside simplify... At 372, output message r_3[u_22] depends on r_3.
No change
Doing global dependency analysis on r_6 inside simplify... At 431, output message r_6[u_37] depends on r_6.
No change
Doing global dependency analysis on r_4 inside simplify... At 438, output message r_4 depends on r_4.
No change
Doing global dependency analysis on r_1 inside simplify... At 379, output message r_1 depends on r_1.
No change
Run simplify 1 time(s). Fixpoint reached.
No change.
Doing simplify... Doing global dependency analysis on r_3 inside simplify... At 372, output message r_3[u_22] depends on r_3.
No change
Doing global dependency analysis on r_6 inside simplify... At 431, output message r_6[u_37] depends on r_6.
No change
Doing global dependency analysis on r_4 inside simplify... At 438, output message r_4 depends on r_4.
No change
Doing global dependency analysis on r_1 inside simplify... At 379, output message r_1 depends on r_1.
No change
Run simplify 1 time(s). Fixpoint reached.
No change.
Doing move all binders... No change.
Doing remove assignments of findcond... No change.
Doing merge branches... Done.
Trying equivalence ind_cca2(enc)... Failed.
Doing remove assignments of binder pk_TD... Done.
Trying equivalence ind_cca2(enc) with k_3, r_7, r_8, r_9, r_10... Transf. OK Transf. done Succeeded.
Doing simplify (non-expanded game)... No change.
Doing expand... Done.
Doing remove assignments of findcond... Done.
Doing simplify... Doing global dependency analysis on r_3 inside simplify... At 380, output message r_3[u_22] depends on r_3.
No change
Doing global dependency analysis on r_6 inside simplify... At 439, output message r_6[u_37] depends on r_6.
No change
Doing global dependency analysis on r_4 inside simplify... At 446, output message r_4 depends on r_4.
No change
Doing global dependency analysis on r_1 inside simplify... At 387, output message r_1 depends on r_1.
No change
Doing global dependency analysis on r_3 inside simplify... At 372, output message r_3[u_22] depends on r_3.
No change
Doing global dependency analysis on r_6 inside simplify... At 431, output message r_6[u_37] depends on r_6.
No change
Doing global dependency analysis on r_4 inside simplify... At 438, output message r_4 depends on r_4.
No change
Doing global dependency analysis on r_1 inside simplify... At 379, output message r_1 depends on r_1.
No change
Run simplify 2 time(s). Fixpoint reached.
Done.
Doing move all binders... No change.
Doing remove assignments of findcond... Done.
Doing merge branches... Done.
Eliminated collisions between r_3 and r_3 Probability: 0.5 / |hashoutput1| * qTDXM * qTDXM
Eliminated collisions between r_6 and r_6 Probability: 0.5 / |hashoutput2| * qCPU * qCPU
Eliminated collisions between r_1 and r_1 Probability: 0.5 / |hashoutput1| * qH1 * qH1
Eliminated collisions between r_3 and r_1 Probability: qTDXM * qH1 / |hashoutput1|
Eliminated collisions between r_4 and r_4 Probability: 0.5 / |hashoutput2| * qH2 * qH2
Eliminated collisions between r_6 and r_4 Probability: qCPU * qH2 / |hashoutput2|
Proved query event(QuoteVerified(x1, x2, x3, x4, x5, x6, x7)) ==> event(eve_QE(x1, x2, x3, x4, x5, x6, x7)) Probability: (0.5 * qTDXM * qTDXM + 0.5 * qH1 * qH1 + qTDXM * qH1) / |hashoutput1| + (0.5 * qCPU * qCPU + 0.5 * qH2 * qH2 + qCPU * qH2) / |hashoutput2|
Eliminated collisions between r_3 and r_3 Probability: 0.5 / |hashoutput1| * qTDXM * qTDXM
Eliminated collisions between r_6 and r_6 Probability: 0.5 / |hashoutput2| * qCPU * qCPU
Eliminated collisions between r_1 and r_1 Probability: 0.5 / |hashoutput1| * qH1 * qH1
Eliminated collisions between r_3 and r_1 Probability: qTDXM * qH1 / |hashoutput1|
Eliminated collisions between r_4 and r_4 Probability: 0.5 / |hashoutput2| * qH2 * qH2
Eliminated collisions between r_6 and r_4 Probability: qCPU * qH2 / |hashoutput2|
Proved query event(eve_QE(x1, x2, x3, x4, x5, x6, x7)) ==> event(CPUsentSMR(x1, x2, x3, x4, x5, x6, x7, x8)) Probability: (0.5 * qTDXM * qTDXM + 0.5 * qH1 * qH1 + qTDXM * qH1) / |hashoutput1| + (0.5 * qCPU * qCPU + 0.5 * qH2 * qH2 + qCPU * qH2) / |hashoutput2|
Eliminated collisions between r_3 and r_3 Probability: 0.5 / |hashoutput1| * qTDXM * qTDXM
Eliminated collisions between r_6 and r_6 Probability: 0.5 / |hashoutput2| * qCPU * qCPU
Eliminated collisions between r_1 and r_1 Probability: 0.5 / |hashoutput1| * qH1 * qH1
Eliminated collisions between r_3 and r_1 Probability: qTDXM * qH1 / |hashoutput1|
Eliminated collisions between r_4 and r_4 Probability: 0.5 / |hashoutput2| * qH2 * qH2
Eliminated collisions between r_6 and r_4 Probability: qCPU * qH2 / |hashoutput2|
Proved query event(QuoteVerified(x1, x2, x3, x4, x5, x6, x7)) ==> event(CPUsentSMR(x1, x2, x3, x4, x5, x6, x7, x8)) Probability: (0.5 * qTDXM * qTDXM + 0.5 * qH1 * qH1 + qTDXM * qH1) / |hashoutput1| + (0.5 * qCPU * qCPU + 0.5 * qH2 * qH2 + qCPU * qH2) / |hashoutput2|
Proof of event(QEaccepted2_14(x1, x2)) ==> event(TDXMsentTDR_8(x1, x2)) failed:
  Found QEaccepted2_14(smr_QE, tdi_QE) at 1369
  but could not prove event(TDXMsentTDR_8(x1, x2))
Proved one-session secrecy of session_key
Proved secrecy of session_key
Sorry, the following queries remain unproved:
- event(QEaccepted2_14(x1, x2)) ==> event(TDXMsentTDR_8(x1, x2))
===================== Proof starts =======================
Initial state
Game 1 is
      in(start, ());
      let skp(spk1: spkey, ssk1: sskey) = (new ks: skeyseed; skp(spkgen(ks), sskgen(ks))) in
      let kp(pk2: pkey, sk2: skey) = (new k_2: keyseed; kp(pkgen(k_2), skgen(k_2))) in
      new hk1: hashkey;
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m2_Ch: bitstring = (let m: bitstring = key2bitstring(session_key) in (let pk_1: pkey = x1_Ch in new r: enc_seed; enc_r(m, pk_1, r))) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        out(ch2[iH], hash1(hk1, x1_1))
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        let kp(pk_TD: pkey, sk_TD: skey) = (new k_3: keyseed; kp(pkgen(k_3), skgen(k_3))) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        insert mes_TD_TDXM_2(rdata_TD);
        out(c5[i_1], ());
        in(c12[i_1], ());
        get mes_TDXM_TD_8(tdr_TD: tdr_t) in
        out(c13[i_1], tdr_TD)
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let rtyp_TDXM: rtyp_t = get_rtyp in
        let tdi_TDXM: tdi_t = get_tdi in
        let tdih_TDXM: hashoutput1 = hash1(hk1, tdi_t2bitstring(tdi_TDXM)) in
        get mes_TD_TDXM_2(rdata_TDXM: rdata_t) in
        let arg_TDXM_CPU_1: arg_TDXM_CPU_t = arg_TDXM_CPU_f(rdata_TDXM, rtyp_TDXM, tdih_TDXM) in
        insert mes_TDXM_CPU_4(arg_TDXM_CPU_1);
        let res4_TDXM: res_t = get_res in
        out(c7[i_2], ());
        in(c10[i_2], ());
        get mes_CPU_TDXM_6(smr_TDXM: smr_t) in
        event TDXMsentTDR_8(smr_TDXM, tdi_TDXM);
        let tdr_TDXM: tdr_t = tdr_f(smr_TDXM, res4_TDXM, tdi_TDXM) in
        event TDXMsentTDR_8(smr_TDXM, tdi_TDXM);
        insert mes_TDXM_TD_8(tdr_TDXM);
        out(c11[i_2], ())
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        get mes_TDXM_CPU_4(arg_TDXM_CPU_2: arg_TDXM_CPU_t) in
        let arg_TDXM_CPU_f(rdata_CPU: rdata_t, rtyp_CPU: rtyp_t, tdih_CPU: hashoutput1) = arg_TDXM_CPU_2 in
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_CPU, res1_CPU, csvn_CPU, tdih_CPU, tcbh_CPU, rdata_CPU, res2_CPU) in
        let mac_CPU: macres_t = mac(rms_without_mac_t2bitstring(rms_without_mac_CPU), mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, mac_CPU) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_CPU, res1_CPU, csvn_CPU, tdih_CPU, tcbh_CPU, rdata_CPU, res2_CPU, mac_CPU);
        insert mes_CPU_TDXM_6(smr_CPU);
        out(c9[i_3], ());
        in(c16[i_3], ());
        get mes_QE_CPU_12(rms_QE_to_CPU: rms_t) in
        let rms_f(rms_without_mac_QE_to_CPU: rms_without_mac_t, mac_QE_to_CPU: macres_t) = rms_QE_to_CPU in
        if check(rms_without_mac_t2bitstring(rms_without_mac_QE_to_CPU), mkey, mac_QE_to_CPU) then
        insert mes_CPU_QE_14(rms_without_mac_QE_to_CPU);
        let rms_without_mac_from_CPU_1: rms_without_mac_t = rms_without_mac_QE_to_CPU in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        insert mes_QE_CPU_12(rms_QE);
        if (tdih_QE = hash1(hk1, tdi_t2bitstring(tdi_QE))) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
        out(c15[i_4], ());
        in(c18[i_4], ());
        get mes_CPU_QE_14(rms_without_mac_from_CPU_2: rms_without_mac_t) suchthat rms_without_mac_from_CPU_2 = rms_without_mac_QE in
        event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
        event QEaccepted2_14(smr_QE, tdi_QE);
        let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
        let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
        let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
        let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
        out(c19[i_4], quote_QE)
      ))


Applying expand get, insert
  - Expand get/insert for table mes_TD_TDXM_2
  - Expand get/insert for table mes_TDXM_TD_8
  - Expand get/insert for table mes_TDXM_CPU_4
  - Expand get/insert for table mes_CPU_TDXM_6
  - Expand get/insert for table mes_CPU_QE_14
  - Expand get/insert for table mes_QE_CPU_12
yields

Game 2 is
      in(start, ());
   {2}let skp(spk1: spkey, ssk1: sskey) = (new ks: skeyseed; skp(spkgen(ks), sskgen(ks))) in
   {9}let kp(pk2: pkey, sk2: skey) = (new k_2: keyseed; kp(pkgen(k_2), skgen(k_2))) in
      new hk1: hashkey;
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m2_Ch: bitstring = (let m: bitstring = key2bitstring(session_key) in (let pk_1: pkey = x1_Ch in new r: enc_seed; enc_r(m, pk_1, r))) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        out(ch2[iH], hash1(hk1, x1_1))
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
 {128}  let kp(pk_TD: pkey, sk_TD: skey) = (new k_3: keyseed; kp(pkgen(k_3), skgen(k_3))) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        let mes_TD_TDXM_1: rdata_t = rdata_TD in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(mes_TDXM_TD_1[u_11]) then
        out(c13[i_1], mes_TDXM_TD_1[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let rtyp_TDXM: rtyp_t = get_rtyp in
        let tdi_TDXM: tdi_t = get_tdi in
        let tdih_TDXM: hashoutput1 = hash1(hk1, tdi_t2bitstring(tdi_TDXM)) in
        find u_8 = u_9 <= qTD suchthat defined(mes_TD_TDXM_1[u_9]) then
        let arg_TDXM_CPU_1: arg_TDXM_CPU_t = arg_TDXM_CPU_f(mes_TD_TDXM_1[u_8], rtyp_TDXM, tdih_TDXM) in
        let mes_TDXM_CPU_1: arg_TDXM_CPU_t = arg_TDXM_CPU_1 in
        let res4_TDXM: res_t = get_res in
        out(c7[i_2], ());
        in(c10[i_2], ());
        find u_6 = u_7 <= qCPU suchthat defined(mes_CPU_TDXM_1[u_7]) then
        event TDXMsentTDR_8(mes_CPU_TDXM_1[u_6], tdi_TDXM);
        let tdr_TDXM: tdr_t = tdr_f(mes_CPU_TDXM_1[u_6], res4_TDXM, tdi_TDXM) in
        event TDXMsentTDR_8(mes_CPU_TDXM_1[u_6], tdi_TDXM);
        let mes_TDXM_TD_1: tdr_t = tdr_TDXM in
        out(c11[i_2], ())
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
 {252}  find u_4 = u_5 <= qTDXM suchthat defined(mes_TDXM_CPU_1[u_5]) then
 {255}  let arg_TDXM_CPU_f(rdata_CPU: rdata_t, rtyp_CPU: rtyp_t, tdih_CPU: hashoutput1) = mes_TDXM_CPU_1[u_4] in
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_CPU, res1_CPU, csvn_CPU, tdih_CPU, tcbh_CPU, rdata_CPU, res2_CPU) in
        let mac_CPU: macres_t = mac(rms_without_mac_t2bitstring(rms_without_mac_CPU), mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, mac_CPU) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_CPU, res1_CPU, csvn_CPU, tdih_CPU, tcbh_CPU, rdata_CPU, res2_CPU, mac_CPU);
        let mes_CPU_TDXM_1: smr_t = smr_CPU in
        out(c9[i_3], ());
        in(c16[i_3], ());
 {335}  find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3]) then
 {338}  let rms_f(rms_without_mac_QE_to_CPU: rms_without_mac_t, mac_QE_to_CPU: macres_t) = mes_QE_CPU_1[u_2] in
        if check(rms_without_mac_t2bitstring(rms_without_mac_QE_to_CPU), mkey, mac_QE_to_CPU) then
        let mes_CPU_QE_1: rms_without_mac_t = rms_without_mac_QE_to_CPU in
        let rms_without_mac_from_CPU_1: rms_without_mac_t = rms_without_mac_QE_to_CPU in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        let mes_QE_CPU_1: rms_t = rms_QE in
        if (tdih_QE = hash1(hk1, tdi_t2bitstring(tdi_QE))) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
        out(c15[i_4], ());
        in(c18[i_4], ());
        find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1]) && (mes_CPU_QE_1[u_1] = rms_without_mac_QE) then
        event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
        event QEaccepted2_14(smr_QE, tdi_QE);
        let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
        let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
        let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
        let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
        out(c19[i_4], quote_QE)
      ))


Applying expand
  - Expand if/find/let
    - Simplify pattern skp(spk1: spkey, ssk1: sskey) (tuple expanded) at 2
    - Simplify pattern kp(pk2: pkey, sk2: skey) (tuple expanded) at 9
    - Simplify pattern arg_TDXM_CPU_f(rdata_CPU: rdata_t, rtyp_CPU: rtyp_t, tdih_CPU: hashoutput1) (tuple expanded) at 255
    - Simplify pattern rms_f(rms_without_mac_QE_to_CPU: rms_without_mac_t, mac_QE_to_CPU: macres_t) (tuple expanded) at 338
    - Replaced defined condition mes_QE_CPU_1[u_3] with mes_QE_CPU_1[u_3], rms_without_mac_QE[u_3], macres_QE[u_3] in find at 335
    - Replaced defined condition mes_TDXM_CPU_1[u_5] with mes_TDXM_CPU_1[u_5], mes_TD_TDXM_1[u_8[u_5]], rtyp_TDXM[u_5], tdih_TDXM[u_5] in find at 252
    - Simplify pattern kp(pk_TD: pkey, sk_TD: skey) (tuple expanded) at 128
yields

Game 3 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new k_2: keyseed;
      let sk2: skey = skgen(k_2) in
      let pk2: pkey = pkgen(k_2) in
      new hk1: hashkey;
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        let pk_1: pkey = x1_Ch in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, pk_1, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        out(ch2[iH], hash1(hk1, x1_1))
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let sk_TD: skey = skgen(k_3) in
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        let mes_TD_TDXM_1: rdata_t = rdata_TD in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(mes_TDXM_TD_1[u_11]) then
        out(c13[i_1], mes_TDXM_TD_1[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let rtyp_TDXM: rtyp_t = get_rtyp in
        let tdi_TDXM: tdi_t = get_tdi in
        let tdih_TDXM: hashoutput1 = hash1(hk1, tdi_t2bitstring(tdi_TDXM)) in
        find u_8 = u_9 <= qTD suchthat defined(mes_TD_TDXM_1[u_9]) then
        let arg_TDXM_CPU_1: arg_TDXM_CPU_t = arg_TDXM_CPU_f(mes_TD_TDXM_1[u_8], rtyp_TDXM, tdih_TDXM) in
        let mes_TDXM_CPU_1: arg_TDXM_CPU_t = arg_TDXM_CPU_1 in
        let res4_TDXM: res_t = get_res in
        out(c7[i_2], ());
        in(c10[i_2], ());
        find u_6 = u_7 <= qCPU suchthat defined(mes_CPU_TDXM_1[u_7]) then
        event TDXMsentTDR_8(mes_CPU_TDXM_1[u_6], tdi_TDXM);
        let tdr_TDXM: tdr_t = tdr_f(mes_CPU_TDXM_1[u_6], res4_TDXM, tdi_TDXM) in
        event TDXMsentTDR_8(mes_CPU_TDXM_1[u_6], tdi_TDXM);
        let mes_TDXM_TD_1: tdr_t = tdr_TDXM in
        out(c11[i_2], ())
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(mes_TDXM_CPU_1[u_5], mes_TD_TDXM_1[u_8[u_5]], rtyp_TDXM[u_5], tdih_TDXM[u_5]) then
        let tdih_CPU: hashoutput1 = tdih_TDXM[u_4] in
        let rtyp_CPU: rtyp_t = rtyp_TDXM[u_4] in
        let rdata_CPU: rdata_t = mes_TD_TDXM_1[u_8[u_4]] in
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_CPU, res1_CPU, csvn_CPU, tdih_CPU, tcbh_CPU, rdata_CPU, res2_CPU) in
        let mac_CPU: macres_t = mac(rms_without_mac_t2bitstring(rms_without_mac_CPU), mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, mac_CPU) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_CPU, res1_CPU, csvn_CPU, tdih_CPU, tcbh_CPU, rdata_CPU, res2_CPU, mac_CPU);
        let mes_CPU_TDXM_1: smr_t = smr_CPU in
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], rms_without_mac_QE[u_3], macres_QE[u_3]) then
        let mac_QE_to_CPU: macres_t = macres_QE[u_2] in
        let rms_without_mac_QE_to_CPU: rms_without_mac_t = rms_without_mac_QE[u_2] in
        if check(rms_without_mac_t2bitstring(rms_without_mac_QE_to_CPU), mkey, mac_QE_to_CPU) then
        let mes_CPU_QE_1: rms_without_mac_t = rms_without_mac_QE_to_CPU in
        let rms_without_mac_from_CPU_1: rms_without_mac_t = rms_without_mac_QE_to_CPU in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        let mes_QE_CPU_1: rms_t = rms_QE in
        if (tdih_QE = hash1(hk1, tdi_t2bitstring(tdi_QE))) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
        out(c15[i_4], ());
        in(c18[i_4], ());
        find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1]) && (mes_CPU_QE_1[u_1] = rms_without_mac_QE) then
        event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
        event QEaccepted2_14(smr_QE, tdi_QE);
        let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
        let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
        let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
        let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
        out(c19[i_4], quote_QE)
      ))


Applying remove assignments of findcond
  - Remove assignments on sk2 (definition removed, all usages removed)
  - Remove assignments on pk2 (definition removed, all usages removed)
  - Remove assignments on mes_QE_CPU_1 (definition point kept, all usages removed)
  - Remove assignments on tdih_CPU (definition removed, all usages removed)
  - Remove assignments on rtyp_CPU (definition removed, all usages removed)
  - Remove assignments on rdata_CPU (definition removed, all usages removed)
  - Remove assignments on mes_CPU_TDXM_1 (definition removed, all usages removed)
  - Remove assignments on mac_QE_to_CPU (definition removed, all usages removed)
  - Remove assignments on rms_without_mac_QE_to_CPU (definition removed, all usages removed)
  - Remove assignments on mes_CPU_QE_1 (definition point kept, all usages removed)
  - Remove assignments on rms_without_mac_from_CPU_1 (definition removed, all usages removed)
  - Remove assignments on mes_TDXM_CPU_1 (definition removed, all usages removed)
  - Remove assignments on mes_TDXM_TD_1 (definition removed, all usages removed)
  - Remove assignments on sk_TD (definition removed, all usages removed)
  - Remove assignments on mes_TD_TDXM_1 (definition removed, all usages removed)
  - Remove assignments on pk_1 (definition removed, all usages removed)
  - Remove assignments on arg_TDXM_CPU_1 (definition removed, all usages removed)
yields

Game 4 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
   {9}new k_2: keyseed;
      new hk1: hashkey;
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        out(ch2[iH], hash1(hk1, x1_1))
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
 {138}  find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11], tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let rtyp_TDXM: rtyp_t = get_rtyp in
        let tdi_TDXM: tdi_t = get_tdi in
        let tdih_TDXM: hashoutput1 = hash1(hk1, tdi_t2bitstring(tdi_TDXM)) in
 {165}  find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9], rdata_TD[u_9]) then
        let res4_TDXM: res_t = get_res in
        out(c7[i_2], ());
        in(c10[i_2], ());
 {176}  find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7], smr_CPU[u_7]) then
        event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
        let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
        event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
        out(c11[i_2], ())
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
 {221}  find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], rdata_TD[u_8[u_5]], res4_TDXM[u_5], rtyp_TDXM[u_5], tdih_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let mac_CPU: macres_t = mac(rms_without_mac_t2bitstring(rms_without_mac_CPU), mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, mac_CPU) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, mac_CPU);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], rms_without_mac_QE[u_3], macres_QE[u_3]) then
        if check(rms_without_mac_t2bitstring(rms_without_mac_QE[u_2]), mkey, macres_QE[u_2]) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        let mes_QE_CPU_1: rms_t = cst_rms_t in
        if (tdih_QE = hash1(hk1, tdi_t2bitstring(tdi_QE))) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
        out(c15[i_4], ());
        in(c18[i_4], ());
 {385}  find u = u_1 <= qCPU suchthat defined(rms_without_mac_QE[u_2[u_1]], mes_CPU_QE_1[u_1]) && {389}(rms_without_mac_QE[u_2[u_1]] = rms_without_mac_QE) then
        event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
        event QEaccepted2_14(smr_QE, tdi_QE);
        let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
        let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
        let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
        let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
        out(c19[i_4], quote_QE)
      ))


Applying simplify
  - Simplification pass
    - Replaced (rms_without_mac_QE[u_2[u_1]] = rms_without_mac_QE) with ((res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE)) at 389
    - Replaced defined condition rms_without_mac_QE[u_2[u_1]], mes_CPU_QE_1[u_1] with mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]] in find at 385
    - Replaced defined condition rdata_TD[u_8[u_5]], rdata_TD[u_8[u_5]], res4_TDXM[u_5], rtyp_TDXM[u_5], tdih_TDXM[u_5] with res4_TDXM[u_5], rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5] in find at 221
    - Replaced defined condition smr_CPU[u_7], smr_CPU[u_7] with smr_CPU[u_7] in find at 176
    - Replaced defined condition rdata_TD[u_9], rdata_TD[u_9] with rdata_TD[u_9] in find at 165
    - Replaced defined condition tdr_TDXM[u_11], tdr_TDXM[u_11] with tdr_TDXM[u_11] in find at 138
    - Remove random number generation at 9
yields

Game 5 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new hk1: hashkey;
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        out(ch2[iH], hash1(hk1, x1_1))
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let rtyp_TDXM: rtyp_t = get_rtyp in
        let tdi_TDXM: tdi_t = get_tdi in
        let tdih_TDXM: hashoutput1 = hash1(hk1, tdi_t2bitstring(tdi_TDXM)) in
        find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
        let res4_TDXM: res_t = get_res in
        out(c7[i_2], ());
        in(c10[i_2], ());
        find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
        event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
        let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
        event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
        out(c11[i_2], ())
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(res4_TDXM[u_5], rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let mac_CPU: macres_t = mac(rms_without_mac_t2bitstring(rms_without_mac_CPU), mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, mac_CPU) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, mac_CPU);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], rms_without_mac_QE[u_3], macres_QE[u_3]) then
        if check(rms_without_mac_t2bitstring(rms_without_mac_QE[u_2]), mkey, macres_QE[u_2]) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        let mes_QE_CPU_1: rms_t = cst_rms_t in
        if (tdih_QE = hash1(hk1, tdi_t2bitstring(tdi_QE))) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
        out(c15[i_4], ());
        in(c18[i_4], ());
        find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
        event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
        event QEaccepted2_14(smr_QE, tdi_QE);
        let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
        let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
        let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
        let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
        out(c19[i_4], quote_QE)
      ))


Applying move all binders
  - Move assignment to mes_QE_CPU_1
  - Move assignment to rtyp_TDXM
yields

Game 6 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new hk1: hashkey;
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        out(ch2[iH], hash1(hk1, x1_1))
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        let tdih_TDXM: hashoutput1 = hash1(hk1, tdi_t2bitstring(tdi_TDXM)) in
        find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
        (
          let res4_TDXM: res_t = get_res in
          let rtyp_TDXM: rtyp_t = get_rtyp in
          out(c7[i_2], ());
          in(c10[i_2], ());
          find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          out(c11[i_2], ())
        )
        else
          let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(res4_TDXM[u_5], rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let mac_CPU: macres_t = mac(rms_without_mac_t2bitstring(rms_without_mac_CPU), mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, mac_CPU) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, mac_CPU);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], rms_without_mac_QE[u_3], macres_QE[u_3]) then
        if check(rms_without_mac_t2bitstring(rms_without_mac_QE[u_2]), mkey, macres_QE[u_2]) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        if (tdih_QE = hash1(hk1, tdi_t2bitstring(tdi_QE))) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
        (
          let mes_QE_CPU_1: rms_t = cst_rms_t in
          out(c15[i_4], ());
          in(c18[i_4], ());
          find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
          event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
          event QEaccepted2_14(smr_QE, tdi_QE);
          let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
          let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
          let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
          let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
          out(c19[i_4], quote_QE)
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying equivalence suf_cma(mac) [probability Pmac(time(context for game 6) + time, qCPU, qCPU, 0, length(rms_without_mac_t2bitstring))]
  - Equivalence suf_cma(mac) with variables: mkey -> k_3
yields

Game 7 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new hk1: hashkey;
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        out(ch2[iH], hash1(hk1, x1_1))
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        let tdih_TDXM: hashoutput1 = hash1(hk1, tdi_t2bitstring(tdi_TDXM)) in
        find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
        (
          let res4_TDXM: res_t = get_res in
          let rtyp_TDXM: rtyp_t = get_rtyp in
          out(c7[i_2], ());
          in(c10[i_2], ());
          find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          out(c11[i_2], ())
        )
        else
          let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
 {220}  find u_4 = u_5 <= qTDXM suchthat defined(res4_TDXM[u_5], rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let mac_CPU: macres_t = (let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in (let ma2: macres_t = mac'(x, mkey) in ma2)) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, mac_CPU) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, mac_CPU);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], rms_without_mac_QE[u_3], macres_QE[u_3]) then
 {319}  if (let m_1: bitstring = rms_without_mac_t2bitstring(rms_without_mac_QE[u_2]) in (let ma: macres_t = macres_QE[u_2] in find u_12 = ri <= qCPU suchthat defined(x[ri], ma2[ri]) && (m_1 = x[ri]) && (ma = ma2[ri]) then true else false)) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        if (tdih_QE = hash1(hk1, tdi_t2bitstring(tdi_QE))) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
        (
          let mes_QE_CPU_1: rms_t = cst_rms_t in
          out(c15[i_4], ());
          in(c18[i_4], ());
          find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
          event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
          event QEaccepted2_14(smr_QE, tdi_QE);
          let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
          let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
          let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
          let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
          out(c19[i_4], quote_QE)
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying expand
  - Expand if/find/let
    - Test at 319 always false
    - Test at 319 always true
    - Replaced defined condition res4_TDXM[u_5], rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5] with rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5] in find at 220
yields

Game 8 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new hk1: hashkey;
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        out(ch2[iH], hash1(hk1, x1_1))
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        let tdih_TDXM: hashoutput1 = hash1(hk1, tdi_t2bitstring(tdi_TDXM)) in
        find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
        (
          let res4_TDXM: res_t = get_res in
          let rtyp_TDXM: rtyp_t = get_rtyp in
          out(c7[i_2], ());
          in(c10[i_2], ());
          find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          out(c11[i_2], ())
        )
        else
          let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
        let ma2: macres_t = mac'(x, mkey) in
        let mac_CPU: macres_t = ma2 in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, mac_CPU) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, mac_CPU);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], rms_without_mac_QE[u_3], macres_QE[u_3]) then
        let m_1: bitstring = rms_without_mac_t2bitstring(rms_without_mac_QE[u_2]) in
        let ma: macres_t = macres_QE[u_2] in
        find u_12 = ri <= qCPU suchthat defined(x[ri], ma2[ri]) && (m_1 = x[ri]) && (ma = ma2[ri]) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        if (tdih_QE = hash1(hk1, tdi_t2bitstring(tdi_QE))) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
        (
          let mes_QE_CPU_1: rms_t = cst_rms_t in
          out(c15[i_4], ());
          in(c18[i_4], ());
          find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
          event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
          event QEaccepted2_14(smr_QE, tdi_QE);
          let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
          let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
          let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
          let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
          out(c19[i_4], quote_QE)
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying remove assignments of findcond
  - Remove assignments on mac_CPU (definition removed, all usages removed)
  - Remove assignments on ma (definition removed, all usages removed)
yields

Game 9 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new hk1: hashkey;
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        out(ch2[iH], hash1(hk1, x1_1))
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        let tdih_TDXM: hashoutput1 = hash1(hk1, tdi_t2bitstring(tdi_TDXM)) in
        find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
        (
          let res4_TDXM: res_t = get_res in
          let rtyp_TDXM: rtyp_t = get_rtyp in
          out(c7[i_2], ());
          in(c10[i_2], ());
          find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          out(c11[i_2], ())
        )
        else
          let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
        let ma2: macres_t = mac'(x, mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, ma2);
        out(c9[i_3], ());
        in(c16[i_3], ());
 {310}  find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], rms_without_mac_QE[u_3], macres_QE[u_3]) then
        let m_1: bitstring = rms_without_mac_t2bitstring(rms_without_mac_QE[u_2]) in
 {320}  find u_12 = ri <= qCPU suchthat defined(x[ri], ma2[ri]) && {323}((m_1 = x[ri]) && (macres_QE[u_2] = ma2[ri])) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        if (tdih_QE = hash1(hk1, tdi_t2bitstring(tdi_QE))) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
        (
          let mes_QE_CPU_1: rms_t = cst_rms_t in
          out(c15[i_4], ());
          in(c18[i_4], ());
          find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
          event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
          event QEaccepted2_14(smr_QE, tdi_QE);
          let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
          let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
          let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
          let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
          out(c19[i_4], quote_QE)
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying simplify
  - Simplification pass
    - Replaced ((m_1 = x[ri]) && (macres_QE[u_2] = ma2[ri])) with ((res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri])) at 323
    - Replaced defined condition x[ri], ma2[ri] with ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri] in find at 320
    - Replaced defined condition mes_QE_CPU_1[u_3], rms_without_mac_QE[u_3], macres_QE[u_3] with mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3], rms_without_mac_QE[u_3] in find at 310
yields

Game 10 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new hk1: hashkey;
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        out(ch2[iH], hash1(hk1, x1_1))
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        let tdih_TDXM: hashoutput1 = hash1(hk1, tdi_t2bitstring(tdi_TDXM)) in
        find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
        (
          let res4_TDXM: res_t = get_res in
          let rtyp_TDXM: rtyp_t = get_rtyp in
          out(c7[i_2], ());
          in(c10[i_2], ());
          find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          out(c11[i_2], ())
        )
        else
          let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
        let ma2: macres_t = mac'(x, mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, ma2);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3], rms_without_mac_QE[u_3]) then
        let m_1: bitstring = rms_without_mac_t2bitstring(rms_without_mac_QE[u_2]) in
        find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        if (tdih_QE = hash1(hk1, tdi_t2bitstring(tdi_QE))) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
        (
          let mes_QE_CPU_1: rms_t = cst_rms_t in
          out(c15[i_4], ());
          in(c18[i_4], ());
          find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
          event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
          event QEaccepted2_14(smr_QE, tdi_QE);
          let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
          let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
          let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
          let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
          out(c19[i_4], quote_QE)
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying move all binders
  - Move assignment to m_1
  - Move assignment to res4_TDXM
yields

Game 11 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new hk1: hashkey;
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
  {99}  out(ch2[iH], hash1(hk1, x1_1))
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        let tdih_TDXM: hashoutput1 = hash1(hk1, tdi_t2bitstring(tdi_TDXM)) in
        find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
        (
          let rtyp_TDXM: rtyp_t = get_rtyp in
          out(c7[i_2], ());
          in(c10[i_2], ());
          find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          let res4_TDXM: res_t = get_res in
          let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          out(c11[i_2], ())
        )
        else
          let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
        let ma2: macres_t = mac'(x, mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, ma2);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3], rms_without_mac_QE[u_3]) then
        find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        if (tdih_QE = hash1(hk1, tdi_t2bitstring(tdi_QE))) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
        (
          let mes_QE_CPU_1: rms_t = cst_rms_t in
          out(c15[i_4], ());
          in(c18[i_4], ());
          find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
          event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
          event QEaccepted2_14(smr_QE, tdi_QE);
          let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
          let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
          let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
          let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
          out(c19[i_4], quote_QE)
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying insert instruction let tdi_t2bitstring(x111)=x1_1 in at occurrence 99
yields

Game 12 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new hk1: hashkey;
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          out(ch2[iH], hash1(hk1, x1_1))
        else
          out(ch2[iH], hash1(hk1, x1_1))
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        let tdih_TDXM: hashoutput1 = hash1(hk1, tdi_t2bitstring(tdi_TDXM)) in
        find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
        (
          let rtyp_TDXM: rtyp_t = get_rtyp in
          out(c7[i_2], ());
          in(c10[i_2], ());
          find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          let res4_TDXM: res_t = get_res in
          let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          out(c11[i_2], ())
        )
        else
          let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
        let ma2: macres_t = mac'(x, mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, ma2);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3], rms_without_mac_QE[u_3]) then
        find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        if (tdih_QE = hash1(hk1, tdi_t2bitstring(tdi_QE))) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
        (
          let mes_QE_CPU_1: rms_t = cst_rms_t in
          out(c15[i_4], ());
          in(c18[i_4], ());
          find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
          event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
          event QEaccepted2_14(smr_QE, tdi_QE);
          let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
          let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
          let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
          let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
          out(c19[i_4], quote_QE)
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying equivalence rom(hash1) [probability qQE / |hashoutput1|]
  - Equivalence rom(hash1) with variables: hk1 -> hk
yields

Game 13 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          out(ch2[iH], (let x_O: bitstring = x1_1 in {106}find [unique] u_24 = ri_12 <= qH1 suchthat defined(x_O[ri_12], r_1[ri_12]) && (x_O = x_O[ri_12]) then r_1[u_24] orfind u_23 = ri_11 <= qH1 suchthat defined(x_O_1[ri_11], r_2[ri_11]) && {119}(x_O = x_O_1[ri_11]) then r_2[u_23] orfind u_22 = ri_10 <= qTDXM suchthat defined(x_O_2[ri_10], r_3[ri_10]) && (x_O = x_O_2[ri_10]) then r_3[u_22] else new r_1: hashoutput1; r_1))
        else
          out(ch2[iH], (let x_O_1: bitstring = x1_1 in {146}find [unique] u_21 = ri_9 <= qH1 suchthat defined(x_O[ri_9], r_1[ri_9]) && {149}(x_O_1 = x_O[ri_9]) then r_1[u_21] orfind u_20 = ri_8 <= qH1 suchthat defined(x_O_1[ri_8], r_2[ri_8]) && (x_O_1 = x_O_1[ri_8]) then r_2[u_20] orfind u_19 = ri_7 <= qTDXM suchthat defined(x_O_2[ri_7], r_3[ri_7]) && {169}(x_O_1 = x_O_2[ri_7]) then r_3[u_19] else new r_2: hashoutput1; r_2))
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        let tdih_TDXM: hashoutput1 = (let x_O_2: bitstring = tdi_t2bitstring(tdi_TDXM) in {235}find [unique] u_18 = ri_6 <= qH1 suchthat defined(x_O[ri_6], r_1[ri_6]) && (x_O_2 = x_O[ri_6]) then r_1[u_18] orfind u_17 = ri_5 <= qH1 suchthat defined(x_O_1[ri_5], r_2[ri_5]) && {248}(x_O_2 = x_O_1[ri_5]) then r_2[u_17] orfind u_16 = ri_4 <= qTDXM suchthat defined(x_O_2[ri_4], r_3[ri_4]) && {258}(x_O_2 = x_O_2[ri_4]) then r_3[u_16] else new r_3: hashoutput1; r_3) in
        find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
        (
          let rtyp_TDXM: rtyp_t = get_rtyp in
          out(c7[i_2], ());
          in(c10[i_2], ());
          find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          let res4_TDXM: res_t = get_res in
          let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          out(c11[i_2], ())
        )
        else
          let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
        let ma2: macres_t = mac'(x, mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, ma2);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
        find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        if (let x_Oeq: bitstring = tdi_t2bitstring(tdi_QE) in (let X_Oeq: hashoutput1 = tdih_QE in {545}find [unique] u_15 = ri_3 <= qH1 suchthat defined(x_O[ri_3], r_1[ri_3]) && (x_Oeq = x_O[ri_3]) then (X_Oeq = r_1[u_15]) orfind u_14 = ri_2 <= qH1 suchthat defined(x_O_1[ri_2], r_2[ri_2]) && {561}(x_Oeq = x_O_1[ri_2]) then (X_Oeq = r_2[u_14]) orfind u_13 = ri_1 <= qTDXM suchthat defined(x_O_2[ri_1], r_3[ri_1]) && (x_Oeq = x_O_2[ri_1]) then (X_Oeq = r_3[u_13]) else false)) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
        (
          let mes_QE_CPU_1: rms_t = cst_rms_t in
          out(c15[i_4], ());
          in(c18[i_4], ());
          find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
          event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
          event QEaccepted2_14(smr_QE, tdi_QE);
          let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
          let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
          let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
          let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
          out(c19[i_4], quote_QE)
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying simplify (non-expanded game)
  - Simplification pass
    - Replaced (x_O = x_O_1[ri_11]) with false at 119
    - Remove branch 2 in find at 106
    - Replaced (x_O_1 = x_O_2[ri_7]) with false at 169
    - Remove branch 3 in find at 146
    - Replaced (x_O_1 = x_O[ri_9]) with false at 149
    - Remove branch 1 in find at 146
    - Replaced (x_O_2 = x_O_2[ri_4]) with true at 258
    - Replaced (x_O_2 = x_O_1[ri_5]) with false at 248
    - Remove branch 2 in find at 235
    - Replaced (x_Oeq = x_O_1[ri_2]) with false at 561
    - Remove branch 2 in find at 545
yields

Game 14 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          out(ch2[iH], (let x_O: bitstring = x1_1 in find [unique] u_24 = ri_12 <= qH1 suchthat defined(x_O[ri_12], r_1[ri_12]) && (x_O = x_O[ri_12]) then r_1[u_24] orfind u_22 = ri_10 <= qTDXM suchthat defined(x_O_2[ri_10], r_3[ri_10]) && (x_O = x_O_2[ri_10]) then r_3[u_22] else new r_1: hashoutput1; r_1))
        else
          out(ch2[iH], (let x_O_1: bitstring = x1_1 in find [unique] u_20 = ri_8 <= qH1 suchthat defined(x_O_1[ri_8], r_2[ri_8]) && (x_O_1 = x_O_1[ri_8]) then r_2[u_20] else new r_2: hashoutput1; r_2))
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        let tdih_TDXM: hashoutput1 = (let x_O_2: bitstring = tdi_t2bitstring(tdi_TDXM) in {205}find [unique] u_18 = ri_6 <= qH1 suchthat defined(x_O[ri_6], r_1[ri_6]) && (x_O_2 = x_O[ri_6]) then r_1[u_18] orfind u_16 = ri_4 <= qTDXM suchthat defined(x_O_2[ri_4], r_3[ri_4]) then r_3[u_16] else new r_3: hashoutput1; r_3) in
        find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
        (
          let rtyp_TDXM: rtyp_t = get_rtyp in
          out(c7[i_2], ());
          in(c10[i_2], ());
          find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          let res4_TDXM: res_t = get_res in
          let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
          event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
          out(c11[i_2], ())
        )
        else
          let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
        let ma2: macres_t = mac'(x, mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, ma2);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
        find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
 {492}  if (let x_Oeq: bitstring = tdi_t2bitstring(tdi_QE) in (let X_Oeq: hashoutput1 = tdih_QE in find [unique] u_15 = ri_3 <= qH1 suchthat defined(x_O[ri_3], r_1[ri_3]) && (x_Oeq = x_O[ri_3]) then (X_Oeq = r_1[u_15]) orfind u_13 = ri_1 <= qTDXM suchthat defined(x_O_2[ri_1], r_3[ri_1]) && (x_Oeq = x_O_2[ri_1]) then (X_Oeq = r_3[u_13]) else false)) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
        (
          let mes_QE_CPU_1: rms_t = cst_rms_t in
          out(c15[i_4], ());
          in(c18[i_4], ());
          find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
          event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
          event QEaccepted2_14(smr_QE, tdi_QE);
          let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
          let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
          let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
          let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
          out(c19[i_4], quote_QE)
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying expand
  - Expand if/find/let
    - Test at 492 always false
    - Replaced defined condition x_O_2[ri_4], r_3[ri_4] with r_3[ri_4] in find at 205
yields

Game 15 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
        (
          let x_O: bitstring = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(x_O[ri_12], r_1[ri_12]) && (x_O = x_O[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(x_O_2[ri_10], r_3[ri_10]) && (x_O = x_O_2[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        )
        else
          let x_O_1: bitstring = x1_1 in
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(x_O_1[ri_8], r_2[ri_8]) && (x_O_1 = x_O_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        let x_O_2: bitstring = tdi_t2bitstring(tdi_TDXM) in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(x_O[ri_6], r_1[ri_6]) && (x_O_2 = x_O[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
        let ma2: macres_t = mac'(x, mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, ma2);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
        find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        let x_Oeq: bitstring = tdi_t2bitstring(tdi_QE) in
        let X_Oeq: hashoutput1 = tdih_QE in
        find [unique] u_15 = ri_3 <= qH1 suchthat defined(x_O[ri_3], r_1[ri_3]) && (x_Oeq = x_O[ri_3]) then
        (
          if (X_Oeq = r_1[u_15]) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(x_O_2[ri_1], r_3[ri_1]) && (x_Oeq = x_O_2[ri_1]) then
        (
          if (X_Oeq = r_3[u_13]) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying remove assignments of findcond
  - Remove assignments on X_Oeq (definition removed, all usages removed)
  - Remove assignments on x_O_1 (definition point kept, all usages removed)
  - Remove assignments on x_O (definition point kept, all usages removed)
yields

Game 16 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
        (
          let x_O: bitstring = cst_bitstring in
 {103}    find [unique] u_24 = ri_12 <= qH1 suchthat defined(x1_1[ri_12], x_O[ri_12], r_1[ri_12]) && {107}(x1_1 = x1_1[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(x_O_2[ri_10], r_3[ri_10]) && {120}(x1_1 = x_O_2[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        )
        else
          let x_O_1: bitstring = cst_bitstring in
 {140}    find [unique] u_20 = ri_8 <= qH1 suchthat defined(x1_1[ri_8], x_O_1[ri_8], r_2[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        let x_O_2: bitstring = tdi_t2bitstring(tdi_TDXM) in
 {215}  find [unique] u_18 = ri_6 <= qH1 suchthat defined(x1_1[ri_6], x_O[ri_6], r_1[ri_6]) && {219}(x_O_2 = x1_1[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
        let ma2: macres_t = mac'(x, mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, ma2);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
        find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        let x_Oeq: bitstring = tdi_t2bitstring(tdi_QE) in
 {620}  find [unique] u_15 = ri_3 <= qH1 suchthat defined(x1_1[ri_3], x_O[ri_3], r_1[ri_3]) && {624}(x_Oeq = x1_1[ri_3]) then
        (
          if (tdih_QE = r_1[u_15]) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(x_O_2[ri_1], r_3[ri_1]) && {785}(x_Oeq = x_O_2[ri_1]) then
        (
          if (tdih_QE = r_3[u_13]) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying simplify
  - Simplification pass
    - Replaced (x_Oeq = x_O_2[ri_1]) with (tdi_QE = tdi_TDXM[ri_1]) at 785
    - Replaced defined condition x_O_2[ri_1], r_3[ri_1] with r_3[ri_1], tdi_TDXM[ri_1] in find at 620
    - Replaced (x_Oeq = x1_1[ri_3]) with (tdi_QE = x111[ri_3]) at 624
    - Replaced defined condition x1_1[ri_3], x_O[ri_3], r_1[ri_3] with r_1[ri_3], x111[ri_3] in find at 620
    - Replaced (x_O_2 = x1_1[ri_6]) with (tdi_TDXM = x111[ri_6]) at 219
    - Replaced defined condition x1_1[ri_6], x_O[ri_6], r_1[ri_6] with r_1[ri_6], x111[ri_6] in find at 215
    - Replaced defined condition x1_1[ri_8], x_O_1[ri_8], r_2[ri_8] with r_2[ri_8], x1_1[ri_8] in find at 140
    - Replaced (x1_1 = x_O_2[ri_10]) with (x111 = tdi_TDXM[ri_10]) at 120
    - Replaced defined condition x_O_2[ri_10], r_3[ri_10] with r_3[ri_10], tdi_TDXM[ri_10] in find at 103
    - Replaced (x1_1 = x1_1[ri_12]) with (x111 = x111[ri_12]) at 107
    - Replaced defined condition x1_1[ri_12], x_O[ri_12], r_1[ri_12] with r_1[ri_12], x111[ri_12] in find at 103
yields

Game 17 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
        (
          let x_O: bitstring = cst_bitstring in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        )
        else
          let x_O_1: bitstring = cst_bitstring in
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        let x_O_2: bitstring = tdi_t2bitstring(tdi_TDXM) in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
        let ma2: macres_t = mac'(x, mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, ma2);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
        find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        let x_Oeq: bitstring = tdi_t2bitstring(tdi_QE) in
        find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
        (
          if (tdih_QE = r_1[u_15]) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
        (
          if (tdih_QE = r_3[u_13]) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying move all binders
  - Move assignment to x_Oeq
  - Move assignment to x_O_2
  - Move assignment to x_O_1
  - Move assignment to x_O
yields

Game 18 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
 {157}  out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
        let ma2: macres_t = mac'(x, mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, ma2);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
        find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
        (
          if (tdih_QE = r_1[u_15]) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
        (
          if (tdih_QE = r_3[u_13]) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying insert instruction let tcbi_t2bitstring(x222)=x1_2 in at occurrence 157
yields

Game 19 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new hk2: hashkey;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          out(ch2_1[iH_1], hash2(hk2, x1_2))
        else
          out(ch2_1[iH_1], hash2(hk2, x1_2))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = hash2(hk2, tcbi_t2bitstring(tcbi_CPU)) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
        let ma2: macres_t = mac'(x, mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, ma2);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
        find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
        (
          if (tdih_QE = r_1[u_15]) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
        (
          if (tdih_QE = r_3[u_13]) && (tcbh_QE = hash2(hk2, tcbi_t2bitstring(tcbi_QE))) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying equivalence rom(hash2) [probability qQE / |hashoutput2|]
  - Equivalence rom(hash2) with variables: hk2 -> hk
yields

Game 20 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          out(ch2_1[iH_1], (let x_O_3: bitstring = x1_2 in {164}find [unique] u_39 = ri_27 <= qH2 suchthat defined(x_O_3[ri_27], r_4[ri_27]) && (x_O_3 = x_O_3[ri_27]) then r_4[u_39] orfind u_38 = ri_26 <= qH2 suchthat defined(x_O_4[ri_26], r_5[ri_26]) && {177}(x_O_3 = x_O_4[ri_26]) then r_5[u_38] orfind u_37 = ri_25 <= qCPU suchthat defined(x_O_5[ri_25], r_6[ri_25]) && (x_O_3 = x_O_5[ri_25]) then r_6[u_37] else new r_4: hashoutput2; r_4))
        else
          out(ch2_1[iH_1], (let x_O_4: bitstring = x1_2 in {204}find [unique] u_36 = ri_24 <= qH2 suchthat defined(x_O_3[ri_24], r_4[ri_24]) && {207}(x_O_4 = x_O_3[ri_24]) then r_4[u_36] orfind u_35 = ri_23 <= qH2 suchthat defined(x_O_4[ri_23], r_5[ri_23]) && (x_O_4 = x_O_4[ri_23]) then r_5[u_35] orfind u_34 = ri_22 <= qCPU suchthat defined(x_O_5[ri_22], r_6[ri_22]) && {227}(x_O_4 = x_O_5[ri_22]) then r_6[u_34] else new r_5: hashoutput2; r_5))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = (let x_O_5: bitstring = tcbi_t2bitstring(tcbi_CPU) in {488}find [unique] u_33 = ri_21 <= qH2 suchthat defined(x_O_3[ri_21], r_4[ri_21]) && (x_O_5 = x_O_3[ri_21]) then r_4[u_33] orfind u_32 = ri_20 <= qH2 suchthat defined(x_O_4[ri_20], r_5[ri_20]) && {501}(x_O_5 = x_O_4[ri_20]) then r_5[u_32] orfind u_31 = ri_19 <= qCPU suchthat defined(x_O_5[ri_19], r_6[ri_19]) && {511}(x_O_5 = x_O_5[ri_19]) then r_6[u_31] else new r_6: hashoutput2; r_6) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
        let ma2: macres_t = mac'(x, mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, ma2);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
        find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
        (
          if (tdih_QE = r_1[u_15]) && (let x_Oeq_1: bitstring = tcbi_t2bitstring(tcbi_QE) in (let X_Oeq_1: hashoutput2 = tcbh_QE in {733}find [unique] u_27 = ri_15 <= qH2 suchthat defined(x_O_3[ri_15], r_4[ri_15]) && (x_Oeq_1 = x_O_3[ri_15]) then (X_Oeq_1 = r_4[u_27]) orfind u_26 = ri_14 <= qH2 suchthat defined(x_O_4[ri_14], r_5[ri_14]) && {749}(x_Oeq_1 = x_O_4[ri_14]) then (X_Oeq_1 = r_5[u_26]) orfind u_25 = ri_13 <= qCPU suchthat defined(x_O_5[ri_13], r_6[ri_13]) && (x_Oeq_1 = x_O_5[ri_13]) then (X_Oeq_1 = r_6[u_25]) else false)) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
        (
          if (tdih_QE = r_3[u_13]) && (let x_Oeq_2: bitstring = tcbi_t2bitstring(tcbi_QE) in (let X_Oeq_2: hashoutput2 = tcbh_QE in {934}find [unique] u_30 = ri_18 <= qH2 suchthat defined(x_O_3[ri_18], r_4[ri_18]) && (x_Oeq_2 = x_O_3[ri_18]) then (X_Oeq_2 = r_4[u_30]) orfind u_29 = ri_17 <= qH2 suchthat defined(x_O_4[ri_17], r_5[ri_17]) && {950}(x_Oeq_2 = x_O_4[ri_17]) then (X_Oeq_2 = r_5[u_29]) orfind u_28 = ri_16 <= qCPU suchthat defined(x_O_5[ri_16], r_6[ri_16]) && (x_Oeq_2 = x_O_5[ri_16]) then (X_Oeq_2 = r_6[u_28]) else false)) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying simplify (non-expanded game)
  - Simplification pass
    - Replaced (x_O_3 = x_O_4[ri_26]) with false at 177
    - Remove branch 2 in find at 164
    - Replaced (x_O_4 = x_O_5[ri_22]) with false at 227
    - Remove branch 3 in find at 204
    - Replaced (x_O_4 = x_O_3[ri_24]) with false at 207
    - Remove branch 1 in find at 204
    - Replaced (x_O_5 = x_O_5[ri_19]) with true at 511
    - Replaced (x_O_5 = x_O_4[ri_20]) with false at 501
    - Remove branch 2 in find at 488
    - Replaced (x_Oeq_1 = x_O_4[ri_14]) with false at 749
    - Remove branch 2 in find at 733
    - Replaced (x_Oeq_2 = x_O_4[ri_17]) with false at 950
    - Remove branch 2 in find at 934
yields

Game 21 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          out(ch2_1[iH_1], (let x_O_3: bitstring = x1_2 in find [unique] u_39 = ri_27 <= qH2 suchthat defined(x_O_3[ri_27], r_4[ri_27]) && (x_O_3 = x_O_3[ri_27]) then r_4[u_39] orfind u_37 = ri_25 <= qCPU suchthat defined(x_O_5[ri_25], r_6[ri_25]) && (x_O_3 = x_O_5[ri_25]) then r_6[u_37] else new r_4: hashoutput2; r_4))
        else
          out(ch2_1[iH_1], (let x_O_4: bitstring = x1_2 in find [unique] u_35 = ri_23 <= qH2 suchthat defined(x_O_4[ri_23], r_5[ri_23]) && (x_O_4 = x_O_4[ri_23]) then r_5[u_35] else new r_5: hashoutput2; r_5))
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let tcbh_CPU: hashoutput2 = (let x_O_5: bitstring = tcbi_t2bitstring(tcbi_CPU) in {458}find [unique] u_33 = ri_21 <= qH2 suchthat defined(x_O_3[ri_21], r_4[ri_21]) && (x_O_5 = x_O_3[ri_21]) then r_4[u_33] orfind u_31 = ri_19 <= qCPU suchthat defined(x_O_5[ri_19], r_6[ri_19]) then r_6[u_31] else new r_6: hashoutput2; r_6) in
        let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
        let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
        let ma2: macres_t = mac'(x, mkey) in
        let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
        let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
        event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, ma2);
        out(c9[i_3], ());
        in(c16[i_3], ());
        find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
        find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
        let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
        out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
        (
 {674}    if (tdih_QE = r_1[u_15]) && (let x_Oeq_1: bitstring = tcbi_t2bitstring(tcbi_QE) in (let X_Oeq_1: hashoutput2 = tcbh_QE in find [unique] u_27 = ri_15 <= qH2 suchthat defined(x_O_3[ri_15], r_4[ri_15]) && (x_Oeq_1 = x_O_3[ri_15]) then (X_Oeq_1 = r_4[u_27]) orfind u_25 = ri_13 <= qCPU suchthat defined(x_O_5[ri_13], r_6[ri_13]) && (x_Oeq_1 = x_O_5[ri_13]) then (X_Oeq_1 = r_6[u_25]) else false)) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
        (
 {862}    if (tdih_QE = r_3[u_13]) && (let x_Oeq_2: bitstring = tcbi_t2bitstring(tcbi_QE) in (let X_Oeq_2: hashoutput2 = tcbh_QE in find [unique] u_30 = ri_18 <= qH2 suchthat defined(x_O_3[ri_18], r_4[ri_18]) && (x_Oeq_2 = x_O_3[ri_18]) then (X_Oeq_2 = r_4[u_30]) orfind u_28 = ri_16 <= qCPU suchthat defined(x_O_5[ri_16], r_6[ri_16]) && (x_Oeq_2 = x_O_5[ri_16]) then (X_Oeq_2 = r_6[u_28]) else false)) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying expand
  - Expand if/find/let
    - Test at 862 always false
    - Test at 674 always false
    - Replaced defined condition x_O_5[ri_19], r_6[ri_19] with r_6[ri_19] in find at 458
yields

Game 22 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
        (
          let x_O_3: bitstring = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(x_O_3[ri_27], r_4[ri_27]) && (x_O_3 = x_O_3[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(x_O_5[ri_25], r_6[ri_25]) && (x_O_3 = x_O_5[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        )
        else
          let x_O_4: bitstring = x1_2 in
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(x_O_4[ri_23], r_5[ri_23]) && (x_O_4 = x_O_4[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let x_O_5: bitstring = tcbi_t2bitstring(tcbi_CPU) in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(x_O_3[ri_21], r_4[ri_21]) && (x_O_5 = x_O_3[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], tcbh_CPU, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
        (
          let x_Oeq_1: bitstring = tcbi_t2bitstring(tcbi_QE) in
          let X_Oeq_1: hashoutput2 = tcbh_QE in
          find [unique] u_27 = ri_15 <= qH2 suchthat defined(x_O_3[ri_15], r_4[ri_15]) && (x_Oeq_1 = x_O_3[ri_15]) then
          (
            if (tdih_QE = r_1[u_15]) && (X_Oeq_1 = r_4[u_27]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_25 = ri_13 <= qCPU suchthat defined(x_O_5[ri_13], r_6[ri_13]) && (x_Oeq_1 = x_O_5[ri_13]) then
          (
            if (tdih_QE = r_1[u_15]) && (X_Oeq_1 = r_6[u_25]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
        (
          let x_Oeq_2: bitstring = tcbi_t2bitstring(tcbi_QE) in
          let X_Oeq_2: hashoutput2 = tcbh_QE in
          find [unique] u_30 = ri_18 <= qH2 suchthat defined(x_O_3[ri_18], r_4[ri_18]) && (x_Oeq_2 = x_O_3[ri_18]) then
          (
            if (tdih_QE = r_3[u_13]) && (X_Oeq_2 = r_4[u_30]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_28 = ri_16 <= qCPU suchthat defined(x_O_5[ri_16], r_6[ri_16]) && (x_Oeq_2 = x_O_5[ri_16]) then
          (
            if (tdih_QE = r_3[u_13]) && (X_Oeq_2 = r_6[u_28]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying remove assignments of findcond
  - Remove assignments on X_Oeq_1 (definition removed, all usages removed)
  - Remove assignments on X_Oeq_2 (definition removed, all usages removed)
  - Remove assignments on tcbh_CPU (definition kept, array references kept)
  - Remove assignments on tcbh_CPU (definition kept, array references kept)
  - Remove assignments on tcbh_CPU (definition kept, array references kept)
  - Remove assignments on x_O_4 (definition point kept, all usages removed)
  - Remove assignments on x_O_3 (definition point kept, all usages removed)
yields

Game 23 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
        (
          let x_O_3: bitstring = cst_bitstring in
 {161}    find [unique] u_39 = ri_27 <= qH2 suchthat defined(x1_2[ri_27], x_O_3[ri_27], r_4[ri_27]) && {165}(x1_2 = x1_2[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(x_O_5[ri_25], r_6[ri_25]) && {178}(x1_2 = x_O_5[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        )
        else
          let x_O_4: bitstring = cst_bitstring in
 {198}    find [unique] u_35 = ri_23 <= qH2 suchthat defined(x1_2[ri_23], x_O_4[ri_23], r_5[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let x_O_5: bitstring = tcbi_t2bitstring(tcbi_CPU) in
 {468}  find [unique] u_33 = ri_21 <= qH2 suchthat defined(x1_2[ri_21], x_O_3[ri_21], r_4[ri_21]) && {472}(x_O_5 = x1_2[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
        (
          let x_Oeq_1: bitstring = tcbi_t2bitstring(tcbi_QE) in
{1032}    find [unique] u_27 = ri_15 <= qH2 suchthat defined(x1_2[ri_15], x_O_3[ri_15], r_4[ri_15]) && {1036}(x_Oeq_1 = x1_2[ri_15]) then
          (
            if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_4[u_27]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_25 = ri_13 <= qCPU suchthat defined(x_O_5[ri_13], r_6[ri_13]) && {1195}(x_Oeq_1 = x_O_5[ri_13]) then
          (
            if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_6[u_25]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
        (
          let x_Oeq_2: bitstring = tcbi_t2bitstring(tcbi_QE) in
{1368}    find [unique] u_30 = ri_18 <= qH2 suchthat defined(x1_2[ri_18], x_O_3[ri_18], r_4[ri_18]) && {1372}(x_Oeq_2 = x1_2[ri_18]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_4[u_30]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_28 = ri_16 <= qCPU suchthat defined(x_O_5[ri_16], r_6[ri_16]) && {1531}(x_Oeq_2 = x_O_5[ri_16]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_6[u_28]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying simplify
  - Simplification pass
    - Replaced (x_Oeq_2 = x_O_5[ri_16]) with (tcbi_QE = tcbi_CPU[ri_16]) at 1531
    - Replaced defined condition x_O_5[ri_16], r_6[ri_16] with r_6[ri_16], tcbi_CPU[ri_16] in find at 1368
    - Replaced (x_Oeq_2 = x1_2[ri_18]) with (tcbi_QE = x222[ri_18]) at 1372
    - Replaced defined condition x1_2[ri_18], x_O_3[ri_18], r_4[ri_18] with r_4[ri_18], x222[ri_18] in find at 1368
    - Replaced (x_Oeq_1 = x_O_5[ri_13]) with (tcbi_QE = tcbi_CPU[ri_13]) at 1195
    - Replaced defined condition x_O_5[ri_13], r_6[ri_13] with r_6[ri_13], tcbi_CPU[ri_13] in find at 1032
    - Replaced (x_Oeq_1 = x1_2[ri_15]) with (tcbi_QE = x222[ri_15]) at 1036
    - Replaced defined condition x1_2[ri_15], x_O_3[ri_15], r_4[ri_15] with r_4[ri_15], x222[ri_15] in find at 1032
    - Replaced (x_O_5 = x1_2[ri_21]) with (tcbi_CPU = x222[ri_21]) at 472
    - Replaced defined condition x1_2[ri_21], x_O_3[ri_21], r_4[ri_21] with r_4[ri_21], x222[ri_21] in find at 468
    - Replaced defined condition x1_2[ri_23], x_O_4[ri_23], r_5[ri_23] with r_5[ri_23], x1_2[ri_23] in find at 198
    - Replaced (x1_2 = x_O_5[ri_25]) with (x222 = tcbi_CPU[ri_25]) at 178
    - Replaced defined condition x_O_5[ri_25], r_6[ri_25] with r_6[ri_25], tcbi_CPU[ri_25] in find at 161
    - Replaced (x1_2 = x1_2[ri_27]) with (x222 = x222[ri_27]) at 165
    - Replaced defined condition x1_2[ri_27], x_O_3[ri_27], r_4[ri_27] with r_4[ri_27], x222[ri_27] in find at 161
yields

Game 24 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
        (
          let x_O_3: bitstring = cst_bitstring in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        )
        else
          let x_O_4: bitstring = cst_bitstring in
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let res1_CPU: res_t = get_res in
        let csvn_CPU: csvn_t = get_csvn in
        let tcbi_CPU: tcbi_t = get_tcbi in
        let res2_CPU: res_t = get_res in
        let x_O_5: bitstring = tcbi_t2bitstring(tcbi_CPU) in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
        (
          let x_Oeq_1: bitstring = tcbi_t2bitstring(tcbi_QE) in
          find [unique] u_27 = ri_15 <= qH2 suchthat defined(r_4[ri_15], x222[ri_15]) && (tcbi_QE = x222[ri_15]) then
          (
            if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_4[u_27]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_25 = ri_13 <= qCPU suchthat defined(r_6[ri_13], tcbi_CPU[ri_13]) && (tcbi_QE = tcbi_CPU[ri_13]) then
          (
            if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_6[u_25]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
        (
          let x_Oeq_2: bitstring = tcbi_t2bitstring(tcbi_QE) in
          find [unique] u_30 = ri_18 <= qH2 suchthat defined(r_4[ri_18], x222[ri_18]) && (tcbi_QE = x222[ri_18]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_4[u_30]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_28 = ri_16 <= qCPU suchthat defined(r_6[ri_16], tcbi_CPU[ri_16]) && (tcbi_QE = tcbi_CPU[ri_16]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_6[u_28]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying move all binders
  - Move assignment to x_Oeq_1
  - Move assignment to x_Oeq_2
  - Move assignment to x_O_5
  - Move assignment to res2_CPU
  - Move assignment to csvn_CPU
  - Move assignment to res1_CPU
  - Move assignment to x_O_4
  - Move assignment to x_O_3
yields

Game 25 is
      in(start, ());
      new ks: skeyseed;
      let ssk1: sskey = sskgen(ks) in
      let spk1: spkey = spkgen(ks) in
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
        (
          find [unique] u_27 = ri_15 <= qH2 suchthat defined(r_4[ri_15], x222[ri_15]) && (tcbi_QE = x222[ri_15]) then
          (
            if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_4[u_27]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_25 = ri_13 <= qCPU suchthat defined(r_6[ri_13], tcbi_CPU[ri_13]) && (tcbi_QE = tcbi_CPU[ri_13]) then
          (
            if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_6[u_25]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
        (
          find [unique] u_30 = ri_18 <= qH2 suchthat defined(r_4[ri_18], x222[ri_18]) && (tcbi_QE = x222[ri_18]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_4[u_30]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_28 = ri_16 <= qCPU suchthat defined(r_6[ri_16], tcbi_CPU[ri_16]) && (tcbi_QE = tcbi_CPU[ri_16]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_6[u_28]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), ssk1) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying remove assignments of binder ssk1
  - Remove assignments on ssk1 (definition removed, all usages removed)
yields

Game 26 is
      in(start, ());
      new ks: skeyseed;
      let spk1: spkey = spkgen(ks) in
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spk1, sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
        (
          find [unique] u_27 = ri_15 <= qH2 suchthat defined(r_4[ri_15], x222[ri_15]) && (tcbi_QE = x222[ri_15]) then
          (
            if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_4[u_27]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), sskgen(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_25 = ri_13 <= qCPU suchthat defined(r_6[ri_13], tcbi_CPU[ri_13]) && (tcbi_QE = tcbi_CPU[ri_13]) then
          (
            if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_6[u_25]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), sskgen(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
        (
          find [unique] u_30 = ri_18 <= qH2 suchthat defined(r_4[ri_18], x222[ri_18]) && (tcbi_QE = x222[ri_18]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_4[u_30]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), sskgen(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_28 = ri_16 <= qCPU suchthat defined(r_6[ri_16], tcbi_CPU[ri_16]) && (tcbi_QE = tcbi_CPU[ri_16]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_6[u_28]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), sskgen(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying remove assignments of binder spk1
  - Remove assignments on spk1 (definition removed, all usages removed)
yields

Game 27 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        if verify(tdr_without_mac_t2bitstring(tdr_without_mac_Ch), spkgen(ks), sig_Ch) then
        let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
        let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
        let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
        let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
        (
          find [unique] u_27 = ri_15 <= qH2 suchthat defined(r_4[ri_15], x222[ri_15]) && (tcbi_QE = x222[ri_15]) then
          (
            if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_4[u_27]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), sskgen(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_25 = ri_13 <= qCPU suchthat defined(r_6[ri_13], tcbi_CPU[ri_13]) && (tcbi_QE = tcbi_CPU[ri_13]) then
          (
            if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_6[u_25]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), sskgen(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
        (
          find [unique] u_30 = ri_18 <= qH2 suchthat defined(r_4[ri_18], x222[ri_18]) && (tcbi_QE = x222[ri_18]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_4[u_30]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), sskgen(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_28 = ri_16 <= qCPU suchthat defined(r_6[ri_16], tcbi_CPU[ri_16]) && (tcbi_QE = tcbi_CPU[ri_16]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_6[u_28]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = sign(tdr_without_mac_t2bitstring(tdr_without_mac_QE), sskgen(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying equivalence uf_cma(sign) with ks [probability Psign(time(context for game 27) + time + (-1 + qChallenger) * time(verify, length(tdr_without_mac_t2bitstring)), qQE, length(tdr_without_mac_t2bitstring))]
  - Equivalence uf_cma(sign) with variables: ks -> r
yields

Game 28 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
  {23}  if (let m1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_Ch) in (let si1: signature = sig_Ch in {31}find u_43 = ri_31 <= qQE suchthat defined(x_1[ri_31]) && (m1 = x_1[ri_31]) && check2(m1, pkgen2(ks), si1) then true orfind u_42 = ri_30 <= qQE suchthat defined(x_2[ri_30]) && (m1 = x_2[ri_30]) && check2(m1, pkgen2(ks), si1) then true orfind u_41 = ri_29 <= qQE suchthat defined(x_3[ri_29]) && (m1 = x_3[ri_29]) && check2(m1, pkgen2(ks), si1) then true orfind u_40 = ri_28 <= qQE suchthat defined(x_4[ri_28]) && (m1 = x_4[ri_28]) && check2(m1, pkgen2(ks), si1) then true else false)) then
  {93}  let tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) = tdr_without_mac_Ch in
  {96}  let smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) = smr_without_mac_Ch in
  {99}  let rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) = rms_without_mac_Ch in
 {102}  let rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) = rdata_Ch in
        event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
        new session_key: key;
        let m: bitstring = key2bitstring(session_key) in
        new r: enc_seed;
        let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
        out(c23[i], m2_Ch)
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
        (
          find [unique] u_27 = ri_15 <= qH2 suchthat defined(r_4[ri_15], x222[ri_15]) && (tcbi_QE = x222[ri_15]) then
          (
            if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_4[u_27]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = (let x_1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in sign2(x_1, skgen2(ks))) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_25 = ri_13 <= qCPU suchthat defined(r_6[ri_13], tcbi_CPU[ri_13]) && (tcbi_QE = tcbi_CPU[ri_13]) then
          (
            if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_6[u_25]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = (let x_2: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in sign2(x_2, skgen2(ks))) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
        (
          find [unique] u_30 = ri_18 <= qH2 suchthat defined(r_4[ri_18], x222[ri_18]) && (tcbi_QE = x222[ri_18]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_4[u_30]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = (let x_3: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in sign2(x_3, skgen2(ks))) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_28 = ri_16 <= qCPU suchthat defined(r_6[ri_16], tcbi_CPU[ri_16]) && (tcbi_QE = tcbi_CPU[ri_16]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_6[u_28]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let sig_QE: signature = (let x_4: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in sign2(x_4, skgen2(ks))) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying expand
  - Expand if/find/let
    - Test at 23 always false
    - Test at 23 always true
    - Simplify pattern tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) (tuple expanded) at 93
    - Simplify pattern smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) (tuple expanded) at 96
    - Simplify pattern rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) (tuple expanded) at 99
    - Simplify pattern rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) (tuple expanded) at 102
    - Replaced defined condition x_4[ri_28] with pk_TD[u_8[u_4[u_12[u[ri_28]]]]], rdata_other[u_8[u_4[u_12[u[ri_28]]]]], rtyp_QE[ri_28], res1_QE[ri_28], csvn_QE[ri_28], tdih_QE[ri_28], tcbh_QE[ri_28], rdata_QE[ri_28], res2_QE[ri_28], rms_without_mac_QE[ri_28], tcbi_QE[ri_28], smr_without_mac_QE[ri_28], res4_QE[ri_28], tdi_QE[ri_28], x_4[ri_28] in find at 31
    - Test at 23 always true
    - Simplify pattern tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) (tuple expanded) at 93
    - Simplify pattern smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) (tuple expanded) at 96
    - Simplify pattern rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) (tuple expanded) at 99
    - Simplify pattern rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) (tuple expanded) at 102
    - Replaced defined condition x_3[ri_29] with pk_TD[u_8[u_4[u_12[u[ri_29]]]]], rdata_other[u_8[u_4[u_12[u[ri_29]]]]], rtyp_QE[ri_29], res1_QE[ri_29], csvn_QE[ri_29], tdih_QE[ri_29], tcbh_QE[ri_29], rdata_QE[ri_29], res2_QE[ri_29], rms_without_mac_QE[ri_29], tcbi_QE[ri_29], smr_without_mac_QE[ri_29], res4_QE[ri_29], tdi_QE[ri_29], x_3[ri_29] in find at 31
    - Test at 23 always true
    - Simplify pattern tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) (tuple expanded) at 93
    - Simplify pattern smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) (tuple expanded) at 96
    - Simplify pattern rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) (tuple expanded) at 99
    - Simplify pattern rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) (tuple expanded) at 102
    - Replaced defined condition x_2[ri_30] with pk_TD[u_8[u_4[u_12[u[ri_30]]]]], rdata_other[u_8[u_4[u_12[u[ri_30]]]]], rtyp_QE[ri_30], res1_QE[ri_30], csvn_QE[ri_30], tdih_QE[ri_30], tcbh_QE[ri_30], rdata_QE[ri_30], res2_QE[ri_30], rms_without_mac_QE[ri_30], tcbi_QE[ri_30], smr_without_mac_QE[ri_30], res4_QE[ri_30], tdi_QE[ri_30], x_2[ri_30] in find at 31
    - Test at 23 always true
    - Simplify pattern tdr_without_mac_f(smr_without_mac_Ch: smr_without_mac_t, res4_Ch: res_t, tdi_Ch: tdi_t) (tuple expanded) at 93
    - Simplify pattern smr_without_mac_f(rms_without_mac_Ch: rms_without_mac_t, tcbi_Ch: tcbi_t) (tuple expanded) at 96
    - Simplify pattern rms_without_mac_f(rtyp_Ch: rtyp_t, res1_Ch: res_t, csvn_Ch: csvn_t, tdih_Ch: hashoutput1, tcbh_CH: hashoutput2, rdata_Ch: rdata_t, res2_Ch: res_t) (tuple expanded) at 99
    - Simplify pattern rdata_f(x1_Ch: pkey, y1_Ch: user_data_t) (tuple expanded) at 102
    - Replaced defined condition x_1[ri_31] with pk_TD[u_8[u_4[u_12[u[ri_31]]]]], rdata_other[u_8[u_4[u_12[u[ri_31]]]]], rtyp_QE[ri_31], res1_QE[ri_31], csvn_QE[ri_31], tdih_QE[ri_31], tcbh_QE[ri_31], rdata_QE[ri_31], res2_QE[ri_31], rms_without_mac_QE[ri_31], tcbi_QE[ri_31], smr_without_mac_QE[ri_31], res4_QE[ri_31], tdi_QE[ri_31], x_1[ri_31] in find at 31
yields

Game 29 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        let m1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_Ch) in
        let si1: signature = sig_Ch in
        find u_43 = ri_31 <= qQE suchthat defined(pk_TD[u_8[u_4[u_12[u[ri_31]]]]], rdata_other[u_8[u_4[u_12[u[ri_31]]]]], rtyp_QE[ri_31], res1_QE[ri_31], csvn_QE[ri_31], tdih_QE[ri_31], tcbh_QE[ri_31], rdata_QE[ri_31], res2_QE[ri_31], rms_without_mac_QE[ri_31], tcbi_QE[ri_31], smr_without_mac_QE[ri_31], res4_QE[ri_31], tdi_QE[ri_31], x_1[ri_31]) && (m1 = x_1[ri_31]) && check2(m1, pkgen2(ks), si1) then
        (
          let tdi_Ch: tdi_t = tdi_QE[u_43] in
          let res4_Ch: res_t = res4_QE[u_43] in
          let smr_without_mac_Ch: smr_without_mac_t = smr_without_mac_QE[u_43] in
          let tcbi_Ch: tcbi_t = tcbi_QE[u_43] in
          let rms_without_mac_Ch: rms_without_mac_t = rms_without_mac_QE[u_43] in
          let res2_Ch: res_t = res2_QE[u_43] in
          let rdata_Ch: rdata_t = rdata_QE[u_43] in
          let tcbh_CH: hashoutput2 = tcbh_QE[u_43] in
          let tdih_Ch: hashoutput1 = tdih_QE[u_43] in
          let csvn_Ch: csvn_t = csvn_QE[u_43] in
          let res1_Ch: res_t = res1_QE[u_43] in
          let rtyp_Ch: rtyp_t = rtyp_QE[u_43] in
          let y1_Ch: user_data_t = rdata_other[u_8[u_4[u_12[u[u_43]]]]] in
          let x1_Ch: pkey = pk_TD[u_8[u_4[u_12[u[u_43]]]]] in
          event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
          out(c23[i], m2_Ch)
        )
        orfind u_42 = ri_30 <= qQE suchthat defined(pk_TD[u_8[u_4[u_12[u[ri_30]]]]], rdata_other[u_8[u_4[u_12[u[ri_30]]]]], rtyp_QE[ri_30], res1_QE[ri_30], csvn_QE[ri_30], tdih_QE[ri_30], tcbh_QE[ri_30], rdata_QE[ri_30], res2_QE[ri_30], rms_without_mac_QE[ri_30], tcbi_QE[ri_30], smr_without_mac_QE[ri_30], res4_QE[ri_30], tdi_QE[ri_30], x_2[ri_30]) && (m1 = x_2[ri_30]) && check2(m1, pkgen2(ks), si1) then
        (
          let tdi_Ch: tdi_t = tdi_QE[u_42] in
          let res4_Ch: res_t = res4_QE[u_42] in
          let smr_without_mac_Ch: smr_without_mac_t = smr_without_mac_QE[u_42] in
          let tcbi_Ch: tcbi_t = tcbi_QE[u_42] in
          let rms_without_mac_Ch: rms_without_mac_t = rms_without_mac_QE[u_42] in
          let res2_Ch: res_t = res2_QE[u_42] in
          let rdata_Ch: rdata_t = rdata_QE[u_42] in
          let tcbh_CH: hashoutput2 = tcbh_QE[u_42] in
          let tdih_Ch: hashoutput1 = tdih_QE[u_42] in
          let csvn_Ch: csvn_t = csvn_QE[u_42] in
          let res1_Ch: res_t = res1_QE[u_42] in
          let rtyp_Ch: rtyp_t = rtyp_QE[u_42] in
          let y1_Ch: user_data_t = rdata_other[u_8[u_4[u_12[u[u_42]]]]] in
          let x1_Ch: pkey = pk_TD[u_8[u_4[u_12[u[u_42]]]]] in
          event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
          out(c23[i], m2_Ch)
        )
        orfind u_41 = ri_29 <= qQE suchthat defined(pk_TD[u_8[u_4[u_12[u[ri_29]]]]], rdata_other[u_8[u_4[u_12[u[ri_29]]]]], rtyp_QE[ri_29], res1_QE[ri_29], csvn_QE[ri_29], tdih_QE[ri_29], tcbh_QE[ri_29], rdata_QE[ri_29], res2_QE[ri_29], rms_without_mac_QE[ri_29], tcbi_QE[ri_29], smr_without_mac_QE[ri_29], res4_QE[ri_29], tdi_QE[ri_29], x_3[ri_29]) && (m1 = x_3[ri_29]) && check2(m1, pkgen2(ks), si1) then
        (
          let tdi_Ch: tdi_t = tdi_QE[u_41] in
          let res4_Ch: res_t = res4_QE[u_41] in
          let smr_without_mac_Ch: smr_without_mac_t = smr_without_mac_QE[u_41] in
          let tcbi_Ch: tcbi_t = tcbi_QE[u_41] in
          let rms_without_mac_Ch: rms_without_mac_t = rms_without_mac_QE[u_41] in
          let res2_Ch: res_t = res2_QE[u_41] in
          let rdata_Ch: rdata_t = rdata_QE[u_41] in
          let tcbh_CH: hashoutput2 = tcbh_QE[u_41] in
          let tdih_Ch: hashoutput1 = tdih_QE[u_41] in
          let csvn_Ch: csvn_t = csvn_QE[u_41] in
          let res1_Ch: res_t = res1_QE[u_41] in
          let rtyp_Ch: rtyp_t = rtyp_QE[u_41] in
          let y1_Ch: user_data_t = rdata_other[u_8[u_4[u_12[u[u_41]]]]] in
          let x1_Ch: pkey = pk_TD[u_8[u_4[u_12[u[u_41]]]]] in
          event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
          out(c23[i], m2_Ch)
        )
        orfind u_40 = ri_28 <= qQE suchthat defined(pk_TD[u_8[u_4[u_12[u[ri_28]]]]], rdata_other[u_8[u_4[u_12[u[ri_28]]]]], rtyp_QE[ri_28], res1_QE[ri_28], csvn_QE[ri_28], tdih_QE[ri_28], tcbh_QE[ri_28], rdata_QE[ri_28], res2_QE[ri_28], rms_without_mac_QE[ri_28], tcbi_QE[ri_28], smr_without_mac_QE[ri_28], res4_QE[ri_28], tdi_QE[ri_28], x_4[ri_28]) && (m1 = x_4[ri_28]) && check2(m1, pkgen2(ks), si1) then
        (
          let tdi_Ch: tdi_t = tdi_QE[u_40] in
          let res4_Ch: res_t = res4_QE[u_40] in
          let smr_without_mac_Ch: smr_without_mac_t = smr_without_mac_QE[u_40] in
          let tcbi_Ch: tcbi_t = tcbi_QE[u_40] in
          let rms_without_mac_Ch: rms_without_mac_t = rms_without_mac_QE[u_40] in
          let res2_Ch: res_t = res2_QE[u_40] in
          let rdata_Ch: rdata_t = rdata_QE[u_40] in
          let tcbh_CH: hashoutput2 = tcbh_QE[u_40] in
          let tdih_Ch: hashoutput1 = tdih_QE[u_40] in
          let csvn_Ch: csvn_t = csvn_QE[u_40] in
          let res1_Ch: res_t = res1_QE[u_40] in
          let rtyp_Ch: rtyp_t = rtyp_QE[u_40] in
          let y1_Ch: user_data_t = rdata_other[u_8[u_4[u_12[u[u_40]]]]] in
          let x1_Ch: pkey = pk_TD[u_8[u_4[u_12[u[u_40]]]]] in
          event QuoteVerified(rtyp_Ch, res1_Ch, csvn_Ch, tdih_Ch, tcbh_CH, rdata_Ch, res2_Ch);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, x1_Ch, r) in
          out(c23[i], m2_Ch)
        )
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
        (
          find [unique] u_27 = ri_15 <= qH2 suchthat defined(r_4[ri_15], x222[ri_15]) && (tcbi_QE = x222[ri_15]) then
          (
            if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_4[u_27]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let x_1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
              let sig_QE: signature = sign2(x_1, skgen2(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_25 = ri_13 <= qCPU suchthat defined(r_6[ri_13], tcbi_CPU[ri_13]) && (tcbi_QE = tcbi_CPU[ri_13]) then
          (
            if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_6[u_25]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let x_2: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
              let sig_QE: signature = sign2(x_2, skgen2(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
        (
          find [unique] u_30 = ri_18 <= qH2 suchthat defined(r_4[ri_18], x222[ri_18]) && (tcbi_QE = x222[ri_18]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_4[u_30]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let x_3: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
              let sig_QE: signature = sign2(x_3, skgen2(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_28 = ri_16 <= qCPU suchthat defined(r_6[ri_16], tcbi_CPU[ri_16]) && (tcbi_QE = tcbi_CPU[ri_16]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_6[u_28]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let x_4: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
              let sig_QE: signature = sign2(x_4, skgen2(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying remove assignments of findcond
  - Remove assignments on si1 (definition removed, all usages removed)
  - Remove assignments on tdi_Ch (definition removed, all usages removed)
  - Remove assignments on res4_Ch (definition removed, all usages removed)
  - Remove assignments on smr_without_mac_Ch (definition removed, all usages removed)
  - Remove assignments on tcbi_Ch (definition removed, all usages removed)
  - Remove assignments on rms_without_mac_Ch (definition removed, all usages removed)
  - Remove assignments on res2_Ch (definition removed, all usages removed)
  - Remove assignments on rdata_Ch (definition removed, all usages removed)
  - Remove assignments on tcbh_CH (definition removed, all usages removed)
  - Remove assignments on tdih_Ch (definition removed, all usages removed)
  - Remove assignments on csvn_Ch (definition removed, all usages removed)
  - Remove assignments on res1_Ch (definition removed, all usages removed)
  - Remove assignments on rtyp_Ch (definition removed, all usages removed)
  - Remove assignments on y1_Ch (definition removed, all usages removed)
  - Remove assignments on x1_Ch (definition removed, all usages removed)
  - Remove assignments on tdi_Ch (definition removed, all usages removed)
  - Remove assignments on res4_Ch (definition removed, all usages removed)
  - Remove assignments on smr_without_mac_Ch (definition removed, all usages removed)
  - Remove assignments on tcbi_Ch (definition removed, all usages removed)
  - Remove assignments on rms_without_mac_Ch (definition removed, all usages removed)
  - Remove assignments on res2_Ch (definition removed, all usages removed)
  - Remove assignments on rdata_Ch (definition removed, all usages removed)
  - Remove assignments on tcbh_CH (definition removed, all usages removed)
  - Remove assignments on tdih_Ch (definition removed, all usages removed)
  - Remove assignments on csvn_Ch (definition removed, all usages removed)
  - Remove assignments on res1_Ch (definition removed, all usages removed)
  - Remove assignments on rtyp_Ch (definition removed, all usages removed)
  - Remove assignments on y1_Ch (definition removed, all usages removed)
  - Remove assignments on x1_Ch (definition removed, all usages removed)
  - Remove assignments on tdi_Ch (definition removed, all usages removed)
  - Remove assignments on res4_Ch (definition removed, all usages removed)
  - Remove assignments on smr_without_mac_Ch (definition removed, all usages removed)
  - Remove assignments on tcbi_Ch (definition removed, all usages removed)
  - Remove assignments on rms_without_mac_Ch (definition removed, all usages removed)
  - Remove assignments on res2_Ch (definition removed, all usages removed)
  - Remove assignments on rdata_Ch (definition removed, all usages removed)
  - Remove assignments on tcbh_CH (definition removed, all usages removed)
  - Remove assignments on tdih_Ch (definition removed, all usages removed)
  - Remove assignments on csvn_Ch (definition removed, all usages removed)
  - Remove assignments on res1_Ch (definition removed, all usages removed)
  - Remove assignments on rtyp_Ch (definition removed, all usages removed)
  - Remove assignments on y1_Ch (definition removed, all usages removed)
  - Remove assignments on x1_Ch (definition removed, all usages removed)
  - Remove assignments on tdi_Ch (definition removed, all usages removed)
  - Remove assignments on res4_Ch (definition removed, all usages removed)
  - Remove assignments on smr_without_mac_Ch (definition removed, all usages removed)
  - Remove assignments on tcbi_Ch (definition removed, all usages removed)
  - Remove assignments on rms_without_mac_Ch (definition removed, all usages removed)
  - Remove assignments on res2_Ch (definition removed, all usages removed)
  - Remove assignments on rdata_Ch (definition removed, all usages removed)
  - Remove assignments on tcbh_CH (definition removed, all usages removed)
  - Remove assignments on tdih_Ch (definition removed, all usages removed)
  - Remove assignments on csvn_Ch (definition removed, all usages removed)
  - Remove assignments on res1_Ch (definition removed, all usages removed)
  - Remove assignments on rtyp_Ch (definition removed, all usages removed)
  - Remove assignments on y1_Ch (definition removed, all usages removed)
  - Remove assignments on x1_Ch (definition removed, all usages removed)
yields

Game 30 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        let m1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_Ch) in
  {27}  find u_43 = ri_31 <= qQE suchthat defined(pk_TD[u_8[u_4[u_12[u[ri_31]]]]], rdata_other[u_8[u_4[u_12[u[ri_31]]]]], rtyp_QE[ri_31], res1_QE[ri_31], csvn_QE[ri_31], tdih_QE[ri_31], tcbh_QE[ri_31], rdata_QE[ri_31], res2_QE[ri_31], rms_without_mac_QE[ri_31], tcbi_QE[ri_31], smr_without_mac_QE[ri_31], res4_QE[ri_31], tdi_QE[ri_31], x_1[ri_31]) && {51}((m1 = x_1[ri_31]) && check2(m1, pkgen2(ks), sig_Ch)) then
        (
          event QuoteVerified(rtyp_QE[u_43], res1_QE[u_43], csvn_QE[u_43], tdih_QE[u_43], tcbh_QE[u_43], rdata_QE[u_43], res2_QE[u_43]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_43]]]]], r) in
          out(c23[i], m2_Ch)
        )
        orfind u_42 = ri_30 <= qQE suchthat defined(pk_TD[u_8[u_4[u_12[u[ri_30]]]]], rdata_other[u_8[u_4[u_12[u[ri_30]]]]], rtyp_QE[ri_30], res1_QE[ri_30], csvn_QE[ri_30], tdih_QE[ri_30], tcbh_QE[ri_30], rdata_QE[ri_30], res2_QE[ri_30], rms_without_mac_QE[ri_30], tcbi_QE[ri_30], smr_without_mac_QE[ri_30], res4_QE[ri_30], tdi_QE[ri_30], x_2[ri_30]) && {138}((m1 = x_2[ri_30]) && check2(m1, pkgen2(ks), sig_Ch)) then
        (
          event QuoteVerified(rtyp_QE[u_42], res1_QE[u_42], csvn_QE[u_42], tdih_QE[u_42], tcbh_QE[u_42], rdata_QE[u_42], res2_QE[u_42]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_42]]]]], r) in
          out(c23[i], m2_Ch)
        )
        orfind u_41 = ri_29 <= qQE suchthat defined(pk_TD[u_8[u_4[u_12[u[ri_29]]]]], rdata_other[u_8[u_4[u_12[u[ri_29]]]]], rtyp_QE[ri_29], res1_QE[ri_29], csvn_QE[ri_29], tdih_QE[ri_29], tcbh_QE[ri_29], rdata_QE[ri_29], res2_QE[ri_29], rms_without_mac_QE[ri_29], tcbi_QE[ri_29], smr_without_mac_QE[ri_29], res4_QE[ri_29], tdi_QE[ri_29], x_3[ri_29]) && {225}((m1 = x_3[ri_29]) && check2(m1, pkgen2(ks), sig_Ch)) then
        (
          event QuoteVerified(rtyp_QE[u_41], res1_QE[u_41], csvn_QE[u_41], tdih_QE[u_41], tcbh_QE[u_41], rdata_QE[u_41], res2_QE[u_41]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_41]]]]], r) in
          out(c23[i], m2_Ch)
        )
        orfind u_40 = ri_28 <= qQE suchthat defined(pk_TD[u_8[u_4[u_12[u[ri_28]]]]], rdata_other[u_8[u_4[u_12[u[ri_28]]]]], rtyp_QE[ri_28], res1_QE[ri_28], csvn_QE[ri_28], tdih_QE[ri_28], tcbh_QE[ri_28], rdata_QE[ri_28], res2_QE[ri_28], rms_without_mac_QE[ri_28], tcbi_QE[ri_28], smr_without_mac_QE[ri_28], res4_QE[ri_28], tdi_QE[ri_28], x_4[ri_28]) && {312}((m1 = x_4[ri_28]) && check2(m1, pkgen2(ks), sig_Ch)) then
        (
          event QuoteVerified(rtyp_QE[u_40], res1_QE[u_40], csvn_QE[u_40], tdih_QE[u_40], tcbh_QE[u_40], rdata_QE[u_40], res2_QE[u_40]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_40]]]]], r) in
          out(c23[i], m2_Ch)
        )
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
{1309}  find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
        (
{1317}    find [unique] u_27 = ri_15 <= qH2 suchthat defined(r_4[ri_15], x222[ri_15]) && (tcbi_QE = x222[ri_15]) then
          (
            if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_4[u_27]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let x_1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
              let sig_QE: signature = sign2(x_1, skgen2(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_25 = ri_13 <= qCPU suchthat defined(r_6[ri_13], tcbi_CPU[ri_13]) && (tcbi_QE = tcbi_CPU[ri_13]) then
          (
            if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_6[u_25]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let x_2: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
              let sig_QE: signature = sign2(x_2, skgen2(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
        (
          find [unique] u_30 = ri_18 <= qH2 suchthat defined(r_4[ri_18], x222[ri_18]) && (tcbi_QE = x222[ri_18]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_4[u_30]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let x_3: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
              let sig_QE: signature = sign2(x_3, skgen2(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_28 = ri_16 <= qCPU suchthat defined(r_6[ri_16], tcbi_CPU[ri_16]) && (tcbi_QE = tcbi_CPU[ri_16]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_6[u_28]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let x_4: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
              let sig_QE: signature = sign2(x_4, skgen2(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying simplify
  - Simplification pass
    - Simplified find at 1317 in branch of find at 1309
    - Replaced ((m1 = x_4[ri_28]) && check2(m1, pkgen2(ks), sig_Ch)) with ((tdr_without_mac_Ch = tdr_without_mac_QE[ri_28]) && check2(m1, pkgen2(ks), sig_Ch)) at 312
    - Replaced defined condition pk_TD[u_8[u_4[u_12[u[ri_28]]]]], rdata_other[u_8[u_4[u_12[u[ri_28]]]]], rtyp_QE[ri_28], res1_QE[ri_28], csvn_QE[ri_28], tdih_QE[ri_28], tcbh_QE[ri_28], rdata_QE[ri_28], res2_QE[ri_28], rms_without_mac_QE[ri_28], tcbi_QE[ri_28], smr_without_mac_QE[ri_28], res4_QE[ri_28], tdi_QE[ri_28], x_4[ri_28] with x_4[ri_28], pk_TD[u_8[u_4[u_12[u[ri_28]]]]], res2_QE[ri_28], rdata_QE[ri_28], tcbh_QE[ri_28], tdih_QE[ri_28], csvn_QE[ri_28], res1_QE[ri_28], rtyp_QE[ri_28], tdr_without_mac_QE[ri_28] in find at 27
    - Replaced ((m1 = x_3[ri_29]) && check2(m1, pkgen2(ks), sig_Ch)) with ((tdr_without_mac_Ch = tdr_without_mac_QE[ri_29]) && check2(m1, pkgen2(ks), sig_Ch)) at 225
    - Replaced defined condition pk_TD[u_8[u_4[u_12[u[ri_29]]]]], rdata_other[u_8[u_4[u_12[u[ri_29]]]]], rtyp_QE[ri_29], res1_QE[ri_29], csvn_QE[ri_29], tdih_QE[ri_29], tcbh_QE[ri_29], rdata_QE[ri_29], res2_QE[ri_29], rms_without_mac_QE[ri_29], tcbi_QE[ri_29], smr_without_mac_QE[ri_29], res4_QE[ri_29], tdi_QE[ri_29], x_3[ri_29] with x_3[ri_29], pk_TD[u_8[u_4[u_12[u[ri_29]]]]], res2_QE[ri_29], rdata_QE[ri_29], tcbh_QE[ri_29], tdih_QE[ri_29], csvn_QE[ri_29], res1_QE[ri_29], rtyp_QE[ri_29], tdr_without_mac_QE[ri_29] in find at 27
    - Replaced ((m1 = x_2[ri_30]) && check2(m1, pkgen2(ks), sig_Ch)) with ((tdr_without_mac_Ch = tdr_without_mac_QE[ri_30]) && check2(m1, pkgen2(ks), sig_Ch)) at 138
    - Replaced defined condition pk_TD[u_8[u_4[u_12[u[ri_30]]]]], rdata_other[u_8[u_4[u_12[u[ri_30]]]]], rtyp_QE[ri_30], res1_QE[ri_30], csvn_QE[ri_30], tdih_QE[ri_30], tcbh_QE[ri_30], rdata_QE[ri_30], res2_QE[ri_30], rms_without_mac_QE[ri_30], tcbi_QE[ri_30], smr_without_mac_QE[ri_30], res4_QE[ri_30], tdi_QE[ri_30], x_2[ri_30] with x_2[ri_30], pk_TD[u_8[u_4[u_12[u[ri_30]]]]], res2_QE[ri_30], rdata_QE[ri_30], tcbh_QE[ri_30], tdih_QE[ri_30], csvn_QE[ri_30], res1_QE[ri_30], rtyp_QE[ri_30], tdr_without_mac_QE[ri_30] in find at 27
    - Replaced ((m1 = x_1[ri_31]) && check2(m1, pkgen2(ks), sig_Ch)) with ((tdr_without_mac_Ch = tdr_without_mac_QE[ri_31]) && check2(m1, pkgen2(ks), sig_Ch)) at 51
    - Replaced defined condition pk_TD[u_8[u_4[u_12[u[ri_31]]]]], rdata_other[u_8[u_4[u_12[u[ri_31]]]]], rtyp_QE[ri_31], res1_QE[ri_31], csvn_QE[ri_31], tdih_QE[ri_31], tcbh_QE[ri_31], rdata_QE[ri_31], res2_QE[ri_31], rms_without_mac_QE[ri_31], tcbi_QE[ri_31], smr_without_mac_QE[ri_31], res4_QE[ri_31], tdi_QE[ri_31], x_1[ri_31] with x_1[ri_31], pk_TD[u_8[u_4[u_12[u[ri_31]]]]], res2_QE[ri_31], rdata_QE[ri_31], tcbh_QE[ri_31], tdih_QE[ri_31], csvn_QE[ri_31], res1_QE[ri_31], rtyp_QE[ri_31], tdr_without_mac_QE[ri_31] in find at 27
yields

Game 31 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        let m1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_Ch) in
        find u_43 = ri_31 <= qQE suchthat defined(x_1[ri_31], pk_TD[u_8[u_4[u_12[u[ri_31]]]]], res2_QE[ri_31], rdata_QE[ri_31], tcbh_QE[ri_31], tdih_QE[ri_31], csvn_QE[ri_31], res1_QE[ri_31], rtyp_QE[ri_31], tdr_without_mac_QE[ri_31]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_31]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_43], res1_QE[u_43], csvn_QE[u_43], tdih_QE[u_43], tcbh_QE[u_43], rdata_QE[u_43], res2_QE[u_43]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_43]]]]], r) in
          out(c23[i], m2_Ch)
        )
        orfind u_42 = ri_30 <= qQE suchthat defined(x_2[ri_30], pk_TD[u_8[u_4[u_12[u[ri_30]]]]], res2_QE[ri_30], rdata_QE[ri_30], tcbh_QE[ri_30], tdih_QE[ri_30], csvn_QE[ri_30], res1_QE[ri_30], rtyp_QE[ri_30], tdr_without_mac_QE[ri_30]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_30]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_42], res1_QE[u_42], csvn_QE[u_42], tdih_QE[u_42], tcbh_QE[u_42], rdata_QE[u_42], res2_QE[u_42]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_42]]]]], r) in
          out(c23[i], m2_Ch)
        )
        orfind u_41 = ri_29 <= qQE suchthat defined(x_3[ri_29], pk_TD[u_8[u_4[u_12[u[ri_29]]]]], res2_QE[ri_29], rdata_QE[ri_29], tcbh_QE[ri_29], tdih_QE[ri_29], csvn_QE[ri_29], res1_QE[ri_29], rtyp_QE[ri_29], tdr_without_mac_QE[ri_29]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_29]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_41], res1_QE[u_41], csvn_QE[u_41], tdih_QE[u_41], tcbh_QE[u_41], rdata_QE[u_41], res2_QE[u_41]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_41]]]]], r) in
          out(c23[i], m2_Ch)
        )
        orfind u_40 = ri_28 <= qQE suchthat defined(x_4[ri_28], pk_TD[u_8[u_4[u_12[u[ri_28]]]]], res2_QE[ri_28], rdata_QE[ri_28], tcbh_QE[ri_28], tdih_QE[ri_28], csvn_QE[ri_28], res1_QE[ri_28], rtyp_QE[ri_28], tdr_without_mac_QE[ri_28]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_28]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_40], res1_QE[u_40], csvn_QE[u_40], tdih_QE[u_40], tcbh_QE[u_40], rdata_QE[u_40], res2_QE[u_40]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_40]]]]], r) in
          out(c23[i], m2_Ch)
        )
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
{1273}  find [unique] u_15 = ri_3 <= qH1, u_27 = ri_15 <= qH2 suchthat defined(r_1[ri_3], x111[ri_3], r_4[ri_15], x222[ri_15]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = x222[ri_15]) then
        (
          if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_4[u_27]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_1, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_15 = ri_3 <= qH1, u_25 = ri_13 <= qCPU suchthat defined(r_1[ri_3], x111[ri_3], r_6[ri_13], tcbi_CPU[ri_13]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = tcbi_CPU[ri_13]) then
        (
          if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_6[u_25]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_2: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_2, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
        (
{1625}    find [unique] u_30 = ri_18 <= qH2 suchthat defined(r_4[ri_18], x222[ri_18]) && (tcbi_QE = x222[ri_18]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_4[u_30]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let x_3: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
              let sig_QE: signature = sign2(x_3, skgen2(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          orfind u_28 = ri_16 <= qCPU suchthat defined(r_6[ri_16], tcbi_CPU[ri_16]) && (tcbi_QE = tcbi_CPU[ri_16]) then
          (
            if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_6[u_28]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t in
              out(c15[i_4], ());
              in(c18[i_4], ());
              find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
              event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
              event QEaccepted2_14(smr_QE, tdi_QE);
              let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
              let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
              let x_4: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
              let sig_QE: signature = sign2(x_4, skgen2(ks)) in
              let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
              out(c19[i_4], quote_QE)
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying simplify
  - Simplification pass
    - Simplified find at 1625 in branch of find at 1273
yields

Game 32 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        let m1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_Ch) in
        find u_43 = ri_31 <= qQE suchthat defined(x_1[ri_31], pk_TD[u_8[u_4[u_12[u[ri_31]]]]], res2_QE[ri_31], rdata_QE[ri_31], tcbh_QE[ri_31], tdih_QE[ri_31], csvn_QE[ri_31], res1_QE[ri_31], rtyp_QE[ri_31], tdr_without_mac_QE[ri_31]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_31]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_43], res1_QE[u_43], csvn_QE[u_43], tdih_QE[u_43], tcbh_QE[u_43], rdata_QE[u_43], res2_QE[u_43]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_43]]]]], r) in
          out(c23[i], m2_Ch)
        )
        orfind u_42 = ri_30 <= qQE suchthat defined(x_2[ri_30], pk_TD[u_8[u_4[u_12[u[ri_30]]]]], res2_QE[ri_30], rdata_QE[ri_30], tcbh_QE[ri_30], tdih_QE[ri_30], csvn_QE[ri_30], res1_QE[ri_30], rtyp_QE[ri_30], tdr_without_mac_QE[ri_30]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_30]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_42], res1_QE[u_42], csvn_QE[u_42], tdih_QE[u_42], tcbh_QE[u_42], rdata_QE[u_42], res2_QE[u_42]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_42]]]]], r) in
          out(c23[i], m2_Ch)
        )
        orfind u_41 = ri_29 <= qQE suchthat defined(x_3[ri_29], pk_TD[u_8[u_4[u_12[u[ri_29]]]]], res2_QE[ri_29], rdata_QE[ri_29], tcbh_QE[ri_29], tdih_QE[ri_29], csvn_QE[ri_29], res1_QE[ri_29], rtyp_QE[ri_29], tdr_without_mac_QE[ri_29]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_29]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_41], res1_QE[u_41], csvn_QE[u_41], tdih_QE[u_41], tcbh_QE[u_41], rdata_QE[u_41], res2_QE[u_41]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_41]]]]], r) in
          out(c23[i], m2_Ch)
        )
        orfind u_40 = ri_28 <= qQE suchthat defined(x_4[ri_28], pk_TD[u_8[u_4[u_12[u[ri_28]]]]], res2_QE[ri_28], rdata_QE[ri_28], tcbh_QE[ri_28], tdih_QE[ri_28], csvn_QE[ri_28], res1_QE[ri_28], rtyp_QE[ri_28], tdr_without_mac_QE[ri_28]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_28]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_40], res1_QE[u_40], csvn_QE[u_40], tdih_QE[u_40], tcbh_QE[u_40], rdata_QE[u_40], res2_QE[u_40]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_40]]]]], r) in
          out(c23[i], m2_Ch)
        )
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_15 = ri_3 <= qH1, u_27 = ri_15 <= qH2 suchthat defined(r_1[ri_3], x111[ri_3], r_4[ri_15], x222[ri_15]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = x222[ri_15]) then
        (
          if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_4[u_27]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_1, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_15 = ri_3 <= qH1, u_25 = ri_13 <= qCPU suchthat defined(r_1[ri_3], x111[ri_3], r_6[ri_13], tcbi_CPU[ri_13]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = tcbi_CPU[ri_13]) then
        (
          if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_6[u_25]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_2: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_2, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM, u_30 = ri_18 <= qH2 suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_4[ri_18], x222[ri_18]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = x222[ri_18]) then
        (
          if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_4[u_30]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_3: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_3, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_13 = ri_1 <= qTDXM, u_28 = ri_16 <= qCPU suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_6[ri_16], tcbi_CPU[ri_16]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = tcbi_CPU[ri_16]) then
        (
          if (tdih_QE = r_3[u_13]) && (tcbh_QE = r_6[u_28]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_4: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_4, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          find [unique] u_13 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying SA rename u_13
  - Rename variable u_13 into u_46, u_45, u_44
yields

Game 33 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        let m1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_Ch) in
        find u_43 = ri_31 <= qQE suchthat defined(x_1[ri_31], pk_TD[u_8[u_4[u_12[u[ri_31]]]]], res2_QE[ri_31], rdata_QE[ri_31], tcbh_QE[ri_31], tdih_QE[ri_31], csvn_QE[ri_31], res1_QE[ri_31], rtyp_QE[ri_31], tdr_without_mac_QE[ri_31]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_31]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_43], res1_QE[u_43], csvn_QE[u_43], tdih_QE[u_43], tcbh_QE[u_43], rdata_QE[u_43], res2_QE[u_43]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_43]]]]], r) in
          out(c23[i], m2_Ch)
        )
        orfind u_42 = ri_30 <= qQE suchthat defined(x_2[ri_30], pk_TD[u_8[u_4[u_12[u[ri_30]]]]], res2_QE[ri_30], rdata_QE[ri_30], tcbh_QE[ri_30], tdih_QE[ri_30], csvn_QE[ri_30], res1_QE[ri_30], rtyp_QE[ri_30], tdr_without_mac_QE[ri_30]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_30]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_42], res1_QE[u_42], csvn_QE[u_42], tdih_QE[u_42], tcbh_QE[u_42], rdata_QE[u_42], res2_QE[u_42]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_42]]]]], r) in
          out(c23[i], m2_Ch)
        )
        orfind u_41 = ri_29 <= qQE suchthat defined(x_3[ri_29], pk_TD[u_8[u_4[u_12[u[ri_29]]]]], res2_QE[ri_29], rdata_QE[ri_29], tcbh_QE[ri_29], tdih_QE[ri_29], csvn_QE[ri_29], res1_QE[ri_29], rtyp_QE[ri_29], tdr_without_mac_QE[ri_29]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_29]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_41], res1_QE[u_41], csvn_QE[u_41], tdih_QE[u_41], tcbh_QE[u_41], rdata_QE[u_41], res2_QE[u_41]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_41]]]]], r) in
          out(c23[i], m2_Ch)
        )
        orfind u_40 = ri_28 <= qQE suchthat defined(x_4[ri_28], pk_TD[u_8[u_4[u_12[u[ri_28]]]]], res2_QE[ri_28], rdata_QE[ri_28], tcbh_QE[ri_28], tdih_QE[ri_28], csvn_QE[ri_28], res1_QE[ri_28], rtyp_QE[ri_28], tdr_without_mac_QE[ri_28]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_28]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_40], res1_QE[u_40], csvn_QE[u_40], tdih_QE[u_40], tcbh_QE[u_40], rdata_QE[u_40], res2_QE[u_40]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_40]]]]], r) in
          out(c23[i], m2_Ch)
        )
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_15 = ri_3 <= qH1, u_27 = ri_15 <= qH2 suchthat defined(r_1[ri_3], x111[ri_3], r_4[ri_15], x222[ri_15]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = x222[ri_15]) then
        (
          if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_4[u_27]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_1, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_15 = ri_3 <= qH1, u_25 = ri_13 <= qCPU suchthat defined(r_1[ri_3], x111[ri_3], r_6[ri_13], tcbi_CPU[ri_13]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = tcbi_CPU[ri_13]) then
        (
          if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_6[u_25]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_2: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_2, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_44 = ri_1 <= qTDXM, u_30 = ri_18 <= qH2 suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_4[ri_18], x222[ri_18]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = x222[ri_18]) then
        (
          if (tdih_QE = r_3[u_44]) && (tcbh_QE = r_4[u_30]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_3: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_3, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_45 = ri_1 <= qTDXM, u_28 = ri_16 <= qCPU suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_6[ri_16], tcbi_CPU[ri_16]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = tcbi_CPU[ri_16]) then
        (
          if (tdih_QE = r_3[u_45]) && (tcbh_QE = r_6[u_28]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_4: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_4, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          find [unique] u_46 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying remove assignments of findcond
  - Rename variable r into r_10, r_9, r_8, r_7
yields

Game 34 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        let m1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_Ch) in
        find u_43 = ri_31 <= qQE suchthat defined(x_1[ri_31], pk_TD[u_8[u_4[u_12[u[ri_31]]]]], res2_QE[ri_31], rdata_QE[ri_31], tcbh_QE[ri_31], tdih_QE[ri_31], csvn_QE[ri_31], res1_QE[ri_31], rtyp_QE[ri_31], tdr_without_mac_QE[ri_31]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_31]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_43], res1_QE[u_43], csvn_QE[u_43], tdih_QE[u_43], tcbh_QE[u_43], rdata_QE[u_43], res2_QE[u_43]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_7: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_43]]]]], r_7) in
          out(c23[i], m2_Ch)
        )
        orfind u_42 = ri_30 <= qQE suchthat defined(x_2[ri_30], pk_TD[u_8[u_4[u_12[u[ri_30]]]]], res2_QE[ri_30], rdata_QE[ri_30], tcbh_QE[ri_30], tdih_QE[ri_30], csvn_QE[ri_30], res1_QE[ri_30], rtyp_QE[ri_30], tdr_without_mac_QE[ri_30]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_30]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_42], res1_QE[u_42], csvn_QE[u_42], tdih_QE[u_42], tcbh_QE[u_42], rdata_QE[u_42], res2_QE[u_42]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_8: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_42]]]]], r_8) in
          out(c23[i], m2_Ch)
        )
        orfind u_41 = ri_29 <= qQE suchthat defined(x_3[ri_29], pk_TD[u_8[u_4[u_12[u[ri_29]]]]], res2_QE[ri_29], rdata_QE[ri_29], tcbh_QE[ri_29], tdih_QE[ri_29], csvn_QE[ri_29], res1_QE[ri_29], rtyp_QE[ri_29], tdr_without_mac_QE[ri_29]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_29]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_41], res1_QE[u_41], csvn_QE[u_41], tdih_QE[u_41], tcbh_QE[u_41], rdata_QE[u_41], res2_QE[u_41]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_9: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_41]]]]], r_9) in
          out(c23[i], m2_Ch)
        )
        orfind u_40 = ri_28 <= qQE suchthat defined(x_4[ri_28], pk_TD[u_8[u_4[u_12[u[ri_28]]]]], res2_QE[ri_28], rdata_QE[ri_28], tcbh_QE[ri_28], tdih_QE[ri_28], csvn_QE[ri_28], res1_QE[ri_28], rtyp_QE[ri_28], tdr_without_mac_QE[ri_28]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_28]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_40], res1_QE[u_40], csvn_QE[u_40], tdih_QE[u_40], tcbh_QE[u_40], rdata_QE[u_40], res2_QE[u_40]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_10: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_40]]]]], r_10) in
          out(c23[i], m2_Ch)
        )
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_15 = ri_3 <= qH1, u_27 = ri_15 <= qH2 suchthat defined(r_1[ri_3], x111[ri_3], r_4[ri_15], x222[ri_15]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = x222[ri_15]) then
        (
          if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_4[u_27]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_1, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_15 = ri_3 <= qH1, u_25 = ri_13 <= qCPU suchthat defined(r_1[ri_3], x111[ri_3], r_6[ri_13], tcbi_CPU[ri_13]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = tcbi_CPU[ri_13]) then
        (
          if (tdih_QE = r_1[u_15]) && (tcbh_QE = r_6[u_25]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_2: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_2, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_44 = ri_1 <= qTDXM, u_30 = ri_18 <= qH2 suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_4[ri_18], x222[ri_18]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = x222[ri_18]) then
        (
          if (tdih_QE = r_3[u_44]) && (tcbh_QE = r_4[u_30]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_3: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_3, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_45 = ri_1 <= qTDXM, u_28 = ri_16 <= qCPU suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_6[ri_16], tcbi_CPU[ri_16]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = tcbi_CPU[ri_16]) then
        (
          if (tdih_QE = r_3[u_45]) && (tcbh_QE = r_6[u_28]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_4: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_4, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          find [unique] u_46 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            find [unique] u_15 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying SA rename u_15
  - Rename variable u_15 into u_49, u_48, u_47
yields

Game 35 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        let m1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_Ch) in
        find u_43 = ri_31 <= qQE suchthat defined(x_1[ri_31], pk_TD[u_8[u_4[u_12[u[ri_31]]]]], res2_QE[ri_31], rdata_QE[ri_31], tcbh_QE[ri_31], tdih_QE[ri_31], csvn_QE[ri_31], res1_QE[ri_31], rtyp_QE[ri_31], tdr_without_mac_QE[ri_31]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_31]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_43], res1_QE[u_43], csvn_QE[u_43], tdih_QE[u_43], tcbh_QE[u_43], rdata_QE[u_43], res2_QE[u_43]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_7: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_43]]]]], r_7) in
          out(c23[i], m2_Ch)
        )
        orfind u_42 = ri_30 <= qQE suchthat defined(x_2[ri_30], pk_TD[u_8[u_4[u_12[u[ri_30]]]]], res2_QE[ri_30], rdata_QE[ri_30], tcbh_QE[ri_30], tdih_QE[ri_30], csvn_QE[ri_30], res1_QE[ri_30], rtyp_QE[ri_30], tdr_without_mac_QE[ri_30]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_30]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_42], res1_QE[u_42], csvn_QE[u_42], tdih_QE[u_42], tcbh_QE[u_42], rdata_QE[u_42], res2_QE[u_42]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_8: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_42]]]]], r_8) in
          out(c23[i], m2_Ch)
        )
        orfind u_41 = ri_29 <= qQE suchthat defined(x_3[ri_29], pk_TD[u_8[u_4[u_12[u[ri_29]]]]], res2_QE[ri_29], rdata_QE[ri_29], tcbh_QE[ri_29], tdih_QE[ri_29], csvn_QE[ri_29], res1_QE[ri_29], rtyp_QE[ri_29], tdr_without_mac_QE[ri_29]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_29]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_41], res1_QE[u_41], csvn_QE[u_41], tdih_QE[u_41], tcbh_QE[u_41], rdata_QE[u_41], res2_QE[u_41]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_9: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_41]]]]], r_9) in
          out(c23[i], m2_Ch)
        )
        orfind u_40 = ri_28 <= qQE suchthat defined(x_4[ri_28], pk_TD[u_8[u_4[u_12[u[ri_28]]]]], res2_QE[ri_28], rdata_QE[ri_28], tcbh_QE[ri_28], tdih_QE[ri_28], csvn_QE[ri_28], res1_QE[ri_28], rtyp_QE[ri_28], tdr_without_mac_QE[ri_28]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_28]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_40], res1_QE[u_40], csvn_QE[u_40], tdih_QE[u_40], tcbh_QE[u_40], rdata_QE[u_40], res2_QE[u_40]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_10: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_40]]]]], r_10) in
          out(c23[i], m2_Ch)
        )
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_47 = ri_3 <= qH1, u_27 = ri_15 <= qH2 suchthat defined(r_1[ri_3], x111[ri_3], r_4[ri_15], x222[ri_15]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = x222[ri_15]) then
        (
          if (tdih_QE = r_1[u_47]) && (tcbh_QE = r_4[u_27]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_1, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_48 = ri_3 <= qH1, u_25 = ri_13 <= qCPU suchthat defined(r_1[ri_3], x111[ri_3], r_6[ri_13], tcbi_CPU[ri_13]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = tcbi_CPU[ri_13]) then
        (
          if (tdih_QE = r_1[u_48]) && (tcbh_QE = r_6[u_25]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_2: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_2, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_44 = ri_1 <= qTDXM, u_30 = ri_18 <= qH2 suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_4[ri_18], x222[ri_18]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = x222[ri_18]) then
        (
          if (tdih_QE = r_3[u_44]) && (tcbh_QE = r_4[u_30]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_3: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_3, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_45 = ri_1 <= qTDXM, u_28 = ri_16 <= qCPU suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_6[ri_16], tcbi_CPU[ri_16]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = tcbi_CPU[ri_16]) then
        (
          if (tdih_QE = r_3[u_45]) && (tcbh_QE = r_6[u_28]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_4: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_4, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          find [unique] u_46 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
{1974}      find [unique] u_49 = ri_3 <= qH1 suchthat defined(r_1[ri_3], x111[ri_3]) && (tdi_QE = x111[ri_3]) then
            (
              let mes_QE_CPU_1: rms_t = cst_rms_t
            )
            else
              let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying merge branches
  - Merge all branches of find at 1974
yields

Game 36 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        let m1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_Ch) in
        find u_43 = ri_31 <= qQE suchthat defined(x_1[ri_31], pk_TD[u_8[u_4[u_12[u[ri_31]]]]], res2_QE[ri_31], rdata_QE[ri_31], tcbh_QE[ri_31], tdih_QE[ri_31], csvn_QE[ri_31], res1_QE[ri_31], rtyp_QE[ri_31], tdr_without_mac_QE[ri_31]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_31]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_43], res1_QE[u_43], csvn_QE[u_43], tdih_QE[u_43], tcbh_QE[u_43], rdata_QE[u_43], res2_QE[u_43]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_7: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_43]]]]], r_7) in
          out(c23[i], m2_Ch)
        )
        orfind u_42 = ri_30 <= qQE suchthat defined(x_2[ri_30], pk_TD[u_8[u_4[u_12[u[ri_30]]]]], res2_QE[ri_30], rdata_QE[ri_30], tcbh_QE[ri_30], tdih_QE[ri_30], csvn_QE[ri_30], res1_QE[ri_30], rtyp_QE[ri_30], tdr_without_mac_QE[ri_30]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_30]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_42], res1_QE[u_42], csvn_QE[u_42], tdih_QE[u_42], tcbh_QE[u_42], rdata_QE[u_42], res2_QE[u_42]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_8: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_42]]]]], r_8) in
          out(c23[i], m2_Ch)
        )
        orfind u_41 = ri_29 <= qQE suchthat defined(x_3[ri_29], pk_TD[u_8[u_4[u_12[u[ri_29]]]]], res2_QE[ri_29], rdata_QE[ri_29], tcbh_QE[ri_29], tdih_QE[ri_29], csvn_QE[ri_29], res1_QE[ri_29], rtyp_QE[ri_29], tdr_without_mac_QE[ri_29]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_29]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_41], res1_QE[u_41], csvn_QE[u_41], tdih_QE[u_41], tcbh_QE[u_41], rdata_QE[u_41], res2_QE[u_41]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_9: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_41]]]]], r_9) in
          out(c23[i], m2_Ch)
        )
        orfind u_40 = ri_28 <= qQE suchthat defined(x_4[ri_28], pk_TD[u_8[u_4[u_12[u[ri_28]]]]], res2_QE[ri_28], rdata_QE[ri_28], tcbh_QE[ri_28], tdih_QE[ri_28], csvn_QE[ri_28], res1_QE[ri_28], rtyp_QE[ri_28], tdr_without_mac_QE[ri_28]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_28]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_40], res1_QE[u_40], csvn_QE[u_40], tdih_QE[u_40], tcbh_QE[u_40], rdata_QE[u_40], res2_QE[u_40]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_10: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pk_TD[u_8[u_4[u_12[u[u_40]]]]], r_10) in
          out(c23[i], m2_Ch)
        )
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let pk_TD: pkey = pkgen(k_3) in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pk_TD, rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_47 = ri_3 <= qH1, u_27 = ri_15 <= qH2 suchthat defined(r_1[ri_3], x111[ri_3], r_4[ri_15], x222[ri_15]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = x222[ri_15]) then
        (
          if (tdih_QE = r_1[u_47]) && (tcbh_QE = r_4[u_27]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_1, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_48 = ri_3 <= qH1, u_25 = ri_13 <= qCPU suchthat defined(r_1[ri_3], x111[ri_3], r_6[ri_13], tcbi_CPU[ri_13]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = tcbi_CPU[ri_13]) then
        (
          if (tdih_QE = r_1[u_48]) && (tcbh_QE = r_6[u_25]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_2: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_2, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_44 = ri_1 <= qTDXM, u_30 = ri_18 <= qH2 suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_4[ri_18], x222[ri_18]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = x222[ri_18]) then
        (
          if (tdih_QE = r_3[u_44]) && (tcbh_QE = r_4[u_30]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_3: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_3, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_45 = ri_1 <= qTDXM, u_28 = ri_16 <= qCPU suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_6[ri_16], tcbi_CPU[ri_16]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = tcbi_CPU[ri_16]) then
        (
          if (tdih_QE = r_3[u_45]) && (tcbh_QE = r_6[u_28]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_4: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_4, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          find [unique] u_46 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying remove assignments of binder pk_TD
  - Remove assignments on pk_TD (definition removed, all usages removed)
yields

Game 37 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        let m1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_Ch) in
        find u_43 = ri_31 <= qQE suchthat defined(k_3[u_8[u_4[u_12[u[ri_31]]]]], k_3[u_8[u_4[u_12[u[ri_31]]]]], x_1[ri_31], res2_QE[ri_31], rdata_QE[ri_31], tcbh_QE[ri_31], tdih_QE[ri_31], csvn_QE[ri_31], res1_QE[ri_31], rtyp_QE[ri_31], tdr_without_mac_QE[ri_31]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_31]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_43], res1_QE[u_43], csvn_QE[u_43], tdih_QE[u_43], tcbh_QE[u_43], rdata_QE[u_43], res2_QE[u_43]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_7: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pkgen(k_3[u_8[u_4[u_12[u[u_43]]]]]), r_7) in
          out(c23[i], m2_Ch)
        )
        orfind u_42 = ri_30 <= qQE suchthat defined(k_3[u_8[u_4[u_12[u[ri_30]]]]], k_3[u_8[u_4[u_12[u[ri_30]]]]], x_2[ri_30], res2_QE[ri_30], rdata_QE[ri_30], tcbh_QE[ri_30], tdih_QE[ri_30], csvn_QE[ri_30], res1_QE[ri_30], rtyp_QE[ri_30], tdr_without_mac_QE[ri_30]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_30]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_42], res1_QE[u_42], csvn_QE[u_42], tdih_QE[u_42], tcbh_QE[u_42], rdata_QE[u_42], res2_QE[u_42]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_8: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pkgen(k_3[u_8[u_4[u_12[u[u_42]]]]]), r_8) in
          out(c23[i], m2_Ch)
        )
        orfind u_41 = ri_29 <= qQE suchthat defined(k_3[u_8[u_4[u_12[u[ri_29]]]]], k_3[u_8[u_4[u_12[u[ri_29]]]]], x_3[ri_29], res2_QE[ri_29], rdata_QE[ri_29], tcbh_QE[ri_29], tdih_QE[ri_29], csvn_QE[ri_29], res1_QE[ri_29], rtyp_QE[ri_29], tdr_without_mac_QE[ri_29]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_29]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_41], res1_QE[u_41], csvn_QE[u_41], tdih_QE[u_41], tcbh_QE[u_41], rdata_QE[u_41], res2_QE[u_41]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_9: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pkgen(k_3[u_8[u_4[u_12[u[u_41]]]]]), r_9) in
          out(c23[i], m2_Ch)
        )
        orfind u_40 = ri_28 <= qQE suchthat defined(k_3[u_8[u_4[u_12[u[ri_28]]]]], k_3[u_8[u_4[u_12[u[ri_28]]]]], x_4[ri_28], res2_QE[ri_28], rdata_QE[ri_28], tcbh_QE[ri_28], tdih_QE[ri_28], csvn_QE[ri_28], res1_QE[ri_28], rtyp_QE[ri_28], tdr_without_mac_QE[ri_28]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_28]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_40], res1_QE[u_40], csvn_QE[u_40], tdih_QE[u_40], tcbh_QE[u_40], rdata_QE[u_40], res2_QE[u_40]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_10: enc_seed;
          let m2_Ch: bitstring = enc_r(m, pkgen(k_3[u_8[u_4[u_12[u[u_40]]]]]), r_10) in
          out(c23[i], m2_Ch)
        )
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_3: keyseed;
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pkgen(k_3), rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_47 = ri_3 <= qH1, u_27 = ri_15 <= qH2 suchthat defined(r_1[ri_3], x111[ri_3], r_4[ri_15], x222[ri_15]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = x222[ri_15]) then
        (
          if (tdih_QE = r_1[u_47]) && (tcbh_QE = r_4[u_27]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_1, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_48 = ri_3 <= qH1, u_25 = ri_13 <= qCPU suchthat defined(r_1[ri_3], x111[ri_3], r_6[ri_13], tcbi_CPU[ri_13]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = tcbi_CPU[ri_13]) then
        (
          if (tdih_QE = r_1[u_48]) && (tcbh_QE = r_6[u_25]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_2: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_2, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_44 = ri_1 <= qTDXM, u_30 = ri_18 <= qH2 suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_4[ri_18], x222[ri_18]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = x222[ri_18]) then
        (
          if (tdih_QE = r_3[u_44]) && (tcbh_QE = r_4[u_30]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_3: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_3, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_45 = ri_1 <= qTDXM, u_28 = ri_16 <= qCPU suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_6[ri_16], tcbi_CPU[ri_16]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = tcbi_CPU[ri_16]) then
        (
          if (tdih_QE = r_3[u_45]) && (tcbh_QE = r_6[u_28]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_4: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_4, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          find [unique] u_46 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying equivalence ind_cca2(enc) with k_3, r_7, r_8, r_9, r_10 [probability qTD * qChallenger * Penc(time(context for game 37) + time + (-1 + qTD * qChallenger) * time(enc_r, maxlength(game 37: m)) + (-1 + qTD) * time(skgen) + (-1 + qTD) * time(pkgen), 0) + (0.5 * qTD * qTD + -0.5 * qTD) * Penccoll]
  - Equivalence ind_cca2(enc) with variables: r_10 -> r1, r_9 -> r1, r_8 -> r1, r_7 -> r1, k_3 -> r
yields

Game 38 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        let m1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_Ch) in
        find u_43 = ri_31 <= qQE suchthat defined(x_1[ri_31], k_4[u_8[u_4[u_12[u[ri_31]]]]], res2_QE[ri_31], rdata_QE[ri_31], tcbh_QE[ri_31], tdih_QE[ri_31], csvn_QE[ri_31], res1_QE[ri_31], rtyp_QE[ri_31], tdr_without_mac_QE[ri_31]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_31]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_43], res1_QE[u_43], csvn_QE[u_43], tdih_QE[u_43], tcbh_QE[u_43], rdata_QE[u_43], res2_QE[u_43]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_11: enc_seed;
          let m2_Ch: bitstring = (let x1: bitstring = m in (let m1_1: bitstring = enc_r2(Z(x1), pkgen2_1(k_4[u_8[u_4[u_12[u[u_43]]]]]), r_11) in m1_1)) in
          out(c23[i], m2_Ch)
        )
        orfind u_42 = ri_30 <= qQE suchthat defined(x_2[ri_30], k_4[u_8[u_4[u_12[u[ri_30]]]]], res2_QE[ri_30], rdata_QE[ri_30], tcbh_QE[ri_30], tdih_QE[ri_30], csvn_QE[ri_30], res1_QE[ri_30], rtyp_QE[ri_30], tdr_without_mac_QE[ri_30]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_30]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_42], res1_QE[u_42], csvn_QE[u_42], tdih_QE[u_42], tcbh_QE[u_42], rdata_QE[u_42], res2_QE[u_42]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_12: enc_seed;
          let m2_Ch: bitstring = (let x1_3: bitstring = m in (let m1_2: bitstring = enc_r2(Z(x1_3), pkgen2_1(k_4[u_8[u_4[u_12[u[u_42]]]]]), r_12) in m1_2)) in
          out(c23[i], m2_Ch)
        )
        orfind u_41 = ri_29 <= qQE suchthat defined(x_3[ri_29], k_4[u_8[u_4[u_12[u[ri_29]]]]], res2_QE[ri_29], rdata_QE[ri_29], tcbh_QE[ri_29], tdih_QE[ri_29], csvn_QE[ri_29], res1_QE[ri_29], rtyp_QE[ri_29], tdr_without_mac_QE[ri_29]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_29]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_41], res1_QE[u_41], csvn_QE[u_41], tdih_QE[u_41], tcbh_QE[u_41], rdata_QE[u_41], res2_QE[u_41]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_13: enc_seed;
          let m2_Ch: bitstring = (let x1_4: bitstring = m in (let m1_3: bitstring = enc_r2(Z(x1_4), pkgen2_1(k_4[u_8[u_4[u_12[u[u_41]]]]]), r_13) in m1_3)) in
          out(c23[i], m2_Ch)
        )
        orfind u_40 = ri_28 <= qQE suchthat defined(x_4[ri_28], k_4[u_8[u_4[u_12[u[ri_28]]]]], res2_QE[ri_28], rdata_QE[ri_28], tcbh_QE[ri_28], tdih_QE[ri_28], csvn_QE[ri_28], res1_QE[ri_28], rtyp_QE[ri_28], tdr_without_mac_QE[ri_28]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_28]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_40], res1_QE[u_40], csvn_QE[u_40], tdih_QE[u_40], tcbh_QE[u_40], rdata_QE[u_40], res2_QE[u_40]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_14: enc_seed;
          let m2_Ch: bitstring = (let x1_5: bitstring = m in (let m1_4: bitstring = enc_r2(Z(x1_5), pkgen2_1(k_4[u_8[u_4[u_12[u[u_40]]]]]), r_14) in m1_4)) in
          out(c23[i], m2_Ch)
        )
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_4: keyseed;
        let k_3: keyseed = cst_keyseed in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pkgen2_1(k_4), rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_47 = ri_3 <= qH1, u_27 = ri_15 <= qH2 suchthat defined(r_1[ri_3], x111[ri_3], r_4[ri_15], x222[ri_15]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = x222[ri_15]) then
        (
          if (tdih_QE = r_1[u_47]) && (tcbh_QE = r_4[u_27]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_1, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_48 = ri_3 <= qH1, u_25 = ri_13 <= qCPU suchthat defined(r_1[ri_3], x111[ri_3], r_6[ri_13], tcbi_CPU[ri_13]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = tcbi_CPU[ri_13]) then
        (
          if (tdih_QE = r_1[u_48]) && (tcbh_QE = r_6[u_25]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_2: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_2, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_44 = ri_1 <= qTDXM, u_30 = ri_18 <= qH2 suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_4[ri_18], x222[ri_18]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = x222[ri_18]) then
        (
          if (tdih_QE = r_3[u_44]) && (tcbh_QE = r_4[u_30]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_3: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_3, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_45 = ri_1 <= qTDXM, u_28 = ri_16 <= qCPU suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_6[ri_16], tcbi_CPU[ri_16]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = tcbi_CPU[ri_16]) then
        (
          if (tdih_QE = r_3[u_45]) && (tcbh_QE = r_6[u_28]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_4: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_4, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          find [unique] u_46 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying expand
  - Expand if/find/let
yields

Game 39 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        let m1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_Ch) in
        find u_43 = ri_31 <= qQE suchthat defined(x_1[ri_31], k_4[u_8[u_4[u_12[u[ri_31]]]]], res2_QE[ri_31], rdata_QE[ri_31], tcbh_QE[ri_31], tdih_QE[ri_31], csvn_QE[ri_31], res1_QE[ri_31], rtyp_QE[ri_31], tdr_without_mac_QE[ri_31]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_31]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_43], res1_QE[u_43], csvn_QE[u_43], tdih_QE[u_43], tcbh_QE[u_43], rdata_QE[u_43], res2_QE[u_43]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_11: enc_seed;
          let x1: bitstring = m in
          let m1_1: bitstring = enc_r2(Z(x1), pkgen2_1(k_4[u_8[u_4[u_12[u[u_43]]]]]), r_11) in
          let m2_Ch: bitstring = m1_1 in
          out(c23[i], m2_Ch)
        )
        orfind u_42 = ri_30 <= qQE suchthat defined(x_2[ri_30], k_4[u_8[u_4[u_12[u[ri_30]]]]], res2_QE[ri_30], rdata_QE[ri_30], tcbh_QE[ri_30], tdih_QE[ri_30], csvn_QE[ri_30], res1_QE[ri_30], rtyp_QE[ri_30], tdr_without_mac_QE[ri_30]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_30]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_42], res1_QE[u_42], csvn_QE[u_42], tdih_QE[u_42], tcbh_QE[u_42], rdata_QE[u_42], res2_QE[u_42]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_12: enc_seed;
          let x1_3: bitstring = m in
          let m1_2: bitstring = enc_r2(Z(x1_3), pkgen2_1(k_4[u_8[u_4[u_12[u[u_42]]]]]), r_12) in
          let m2_Ch: bitstring = m1_2 in
          out(c23[i], m2_Ch)
        )
        orfind u_41 = ri_29 <= qQE suchthat defined(x_3[ri_29], k_4[u_8[u_4[u_12[u[ri_29]]]]], res2_QE[ri_29], rdata_QE[ri_29], tcbh_QE[ri_29], tdih_QE[ri_29], csvn_QE[ri_29], res1_QE[ri_29], rtyp_QE[ri_29], tdr_without_mac_QE[ri_29]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_29]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_41], res1_QE[u_41], csvn_QE[u_41], tdih_QE[u_41], tcbh_QE[u_41], rdata_QE[u_41], res2_QE[u_41]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_13: enc_seed;
          let x1_4: bitstring = m in
          let m1_3: bitstring = enc_r2(Z(x1_4), pkgen2_1(k_4[u_8[u_4[u_12[u[u_41]]]]]), r_13) in
          let m2_Ch: bitstring = m1_3 in
          out(c23[i], m2_Ch)
        )
        orfind u_40 = ri_28 <= qQE suchthat defined(x_4[ri_28], k_4[u_8[u_4[u_12[u[ri_28]]]]], res2_QE[ri_28], rdata_QE[ri_28], tcbh_QE[ri_28], tdih_QE[ri_28], csvn_QE[ri_28], res1_QE[ri_28], rtyp_QE[ri_28], tdr_without_mac_QE[ri_28]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_28]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_40], res1_QE[u_40], csvn_QE[u_40], tdih_QE[u_40], tcbh_QE[u_40], rdata_QE[u_40], res2_QE[u_40]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_14: enc_seed;
          let x1_5: bitstring = m in
          let m1_4: bitstring = enc_r2(Z(x1_5), pkgen2_1(k_4[u_8[u_4[u_12[u[u_40]]]]]), r_14) in
          let m2_Ch: bitstring = m1_4 in
          out(c23[i], m2_Ch)
        )
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_4: keyseed;
        let k_3: keyseed = cst_keyseed in
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pkgen2_1(k_4), rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_47 = ri_3 <= qH1, u_27 = ri_15 <= qH2 suchthat defined(r_1[ri_3], x111[ri_3], r_4[ri_15], x222[ri_15]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = x222[ri_15]) then
        (
          if (tdih_QE = r_1[u_47]) && (tcbh_QE = r_4[u_27]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_1, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_48 = ri_3 <= qH1, u_25 = ri_13 <= qCPU suchthat defined(r_1[ri_3], x111[ri_3], r_6[ri_13], tcbi_CPU[ri_13]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = tcbi_CPU[ri_13]) then
        (
          if (tdih_QE = r_1[u_48]) && (tcbh_QE = r_6[u_25]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_2: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_2, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_44 = ri_1 <= qTDXM, u_30 = ri_18 <= qH2 suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_4[ri_18], x222[ri_18]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = x222[ri_18]) then
        (
          if (tdih_QE = r_3[u_44]) && (tcbh_QE = r_4[u_30]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_3: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_3, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_45 = ri_1 <= qTDXM, u_28 = ri_16 <= qCPU suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_6[ri_16], tcbi_CPU[ri_16]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = tcbi_CPU[ri_16]) then
        (
          if (tdih_QE = r_3[u_45]) && (tcbh_QE = r_6[u_28]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_4: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_4, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          find [unique] u_46 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying remove assignments of findcond
  - Remove assignments on k_3 (definition removed, all usages removed)
  - Remove assignments on x1 (definition removed, all usages removed)
  - Remove assignments on m2_Ch (definition removed, all usages removed)
  - Remove assignments on x1_3 (definition removed, all usages removed)
  - Remove assignments on m2_Ch (definition removed, all usages removed)
  - Remove assignments on x1_4 (definition removed, all usages removed)
  - Remove assignments on m2_Ch (definition removed, all usages removed)
  - Remove assignments on x1_5 (definition removed, all usages removed)
  - Remove assignments on m2_Ch (definition removed, all usages removed)
yields

Game 40 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        let m1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_Ch) in
        find u_43 = ri_31 <= qQE suchthat defined(x_1[ri_31], k_4[u_8[u_4[u_12[u[ri_31]]]]], res2_QE[ri_31], rdata_QE[ri_31], tcbh_QE[ri_31], tdih_QE[ri_31], csvn_QE[ri_31], res1_QE[ri_31], rtyp_QE[ri_31], tdr_without_mac_QE[ri_31]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_31]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_43], res1_QE[u_43], csvn_QE[u_43], tdih_QE[u_43], tcbh_QE[u_43], rdata_QE[u_43], res2_QE[u_43]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_11: enc_seed;
          let m1_1: bitstring = {87}enc_r2(Z(m), pkgen2_1(k_4[u_8[u_4[u_12[u[u_43]]]]]), r_11) in
          out(c23[i], m1_1)
        )
        orfind u_42 = ri_30 <= qQE suchthat defined(x_2[ri_30], k_4[u_8[u_4[u_12[u[ri_30]]]]], res2_QE[ri_30], rdata_QE[ri_30], tcbh_QE[ri_30], tdih_QE[ri_30], csvn_QE[ri_30], res1_QE[ri_30], rtyp_QE[ri_30], tdr_without_mac_QE[ri_30]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_30]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_42], res1_QE[u_42], csvn_QE[u_42], tdih_QE[u_42], tcbh_QE[u_42], rdata_QE[u_42], res2_QE[u_42]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_12: enc_seed;
          let m1_2: bitstring = {167}enc_r2(Z(m), pkgen2_1(k_4[u_8[u_4[u_12[u[u_42]]]]]), r_12) in
          out(c23[i], m1_2)
        )
        orfind u_41 = ri_29 <= qQE suchthat defined(x_3[ri_29], k_4[u_8[u_4[u_12[u[ri_29]]]]], res2_QE[ri_29], rdata_QE[ri_29], tcbh_QE[ri_29], tdih_QE[ri_29], csvn_QE[ri_29], res1_QE[ri_29], rtyp_QE[ri_29], tdr_without_mac_QE[ri_29]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_29]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_41], res1_QE[u_41], csvn_QE[u_41], tdih_QE[u_41], tcbh_QE[u_41], rdata_QE[u_41], res2_QE[u_41]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_13: enc_seed;
          let m1_3: bitstring = {247}enc_r2(Z(m), pkgen2_1(k_4[u_8[u_4[u_12[u[u_41]]]]]), r_13) in
          out(c23[i], m1_3)
        )
        orfind u_40 = ri_28 <= qQE suchthat defined(x_4[ri_28], k_4[u_8[u_4[u_12[u[ri_28]]]]], res2_QE[ri_28], rdata_QE[ri_28], tcbh_QE[ri_28], tdih_QE[ri_28], csvn_QE[ri_28], res1_QE[ri_28], rtyp_QE[ri_28], tdr_without_mac_QE[ri_28]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_28]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_40], res1_QE[u_40], csvn_QE[u_40], tdih_QE[u_40], tcbh_QE[u_40], rdata_QE[u_40], res2_QE[u_40]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_14: enc_seed;
          let m1_4: bitstring = {327}enc_r2(Z(m), pkgen2_1(k_4[u_8[u_4[u_12[u[u_40]]]]]), r_14) in
          out(c23[i], m1_4)
        )
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_4: keyseed;
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pkgen2_1(k_4), rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_47 = ri_3 <= qH1, u_27 = ri_15 <= qH2 suchthat defined(r_1[ri_3], x111[ri_3], r_4[ri_15], x222[ri_15]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = x222[ri_15]) then
        (
          if (tdih_QE = r_1[u_47]) && (tcbh_QE = r_4[u_27]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_1, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_48 = ri_3 <= qH1, u_25 = ri_13 <= qCPU suchthat defined(r_1[ri_3], x111[ri_3], r_6[ri_13], tcbi_CPU[ri_13]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = tcbi_CPU[ri_13]) then
        (
          if (tdih_QE = r_1[u_48]) && (tcbh_QE = r_6[u_25]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_2: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_2, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_44 = ri_1 <= qTDXM, u_30 = ri_18 <= qH2 suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_4[ri_18], x222[ri_18]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = x222[ri_18]) then
        (
          if (tdih_QE = r_3[u_44]) && (tcbh_QE = r_4[u_30]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_3: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_3, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_45 = ri_1 <= qTDXM, u_28 = ri_16 <= qCPU suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_6[ri_16], tcbi_CPU[ri_16]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = tcbi_CPU[ri_16]) then
        (
          if (tdih_QE = r_3[u_45]) && (tcbh_QE = r_6[u_28]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_4: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_4, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          find [unique] u_46 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying simplify
  - Simplification pass
    - Replaced enc_r2(Z(m), pkgen2_1(k_4[u_8[u_4[u_12[u[u_40]]]]]), r_14) with enc_r2(Zkey, pkgen2_1(k_4[u_8[u_4[u_12[u[u_40]]]]]), r_14) at 327
    - Replaced enc_r2(Z(m), pkgen2_1(k_4[u_8[u_4[u_12[u[u_41]]]]]), r_13) with enc_r2(Zkey, pkgen2_1(k_4[u_8[u_4[u_12[u[u_41]]]]]), r_13) at 247
    - Replaced enc_r2(Z(m), pkgen2_1(k_4[u_8[u_4[u_12[u[u_42]]]]]), r_12) with enc_r2(Zkey, pkgen2_1(k_4[u_8[u_4[u_12[u[u_42]]]]]), r_12) at 167
    - Replaced enc_r2(Z(m), pkgen2_1(k_4[u_8[u_4[u_12[u[u_43]]]]]), r_11) with enc_r2(Zkey, pkgen2_1(k_4[u_8[u_4[u_12[u[u_43]]]]]), r_11) at 87
yields

Game 41 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        let m1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_Ch) in
        find u_43 = ri_31 <= qQE suchthat defined(x_1[ri_31], k_4[u_8[u_4[u_12[u[ri_31]]]]], res2_QE[ri_31], rdata_QE[ri_31], tcbh_QE[ri_31], tdih_QE[ri_31], csvn_QE[ri_31], res1_QE[ri_31], rtyp_QE[ri_31], tdr_without_mac_QE[ri_31]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_31]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_43], res1_QE[u_43], csvn_QE[u_43], tdih_QE[u_43], tcbh_QE[u_43], rdata_QE[u_43], res2_QE[u_43]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_11: enc_seed;
          let m1_1: bitstring = enc_r2(Zkey, pkgen2_1(k_4[u_8[u_4[u_12[u[u_43]]]]]), r_11) in
          out(c23[i], m1_1)
        )
        orfind u_42 = ri_30 <= qQE suchthat defined(x_2[ri_30], k_4[u_8[u_4[u_12[u[ri_30]]]]], res2_QE[ri_30], rdata_QE[ri_30], tcbh_QE[ri_30], tdih_QE[ri_30], csvn_QE[ri_30], res1_QE[ri_30], rtyp_QE[ri_30], tdr_without_mac_QE[ri_30]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_30]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_42], res1_QE[u_42], csvn_QE[u_42], tdih_QE[u_42], tcbh_QE[u_42], rdata_QE[u_42], res2_QE[u_42]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_12: enc_seed;
          let m1_2: bitstring = enc_r2(Zkey, pkgen2_1(k_4[u_8[u_4[u_12[u[u_42]]]]]), r_12) in
          out(c23[i], m1_2)
        )
        orfind u_41 = ri_29 <= qQE suchthat defined(x_3[ri_29], k_4[u_8[u_4[u_12[u[ri_29]]]]], res2_QE[ri_29], rdata_QE[ri_29], tcbh_QE[ri_29], tdih_QE[ri_29], csvn_QE[ri_29], res1_QE[ri_29], rtyp_QE[ri_29], tdr_without_mac_QE[ri_29]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_29]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_41], res1_QE[u_41], csvn_QE[u_41], tdih_QE[u_41], tcbh_QE[u_41], rdata_QE[u_41], res2_QE[u_41]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_13: enc_seed;
          let m1_3: bitstring = enc_r2(Zkey, pkgen2_1(k_4[u_8[u_4[u_12[u[u_41]]]]]), r_13) in
          out(c23[i], m1_3)
        )
        orfind u_40 = ri_28 <= qQE suchthat defined(x_4[ri_28], k_4[u_8[u_4[u_12[u[ri_28]]]]], res2_QE[ri_28], rdata_QE[ri_28], tcbh_QE[ri_28], tdih_QE[ri_28], csvn_QE[ri_28], res1_QE[ri_28], rtyp_QE[ri_28], tdr_without_mac_QE[ri_28]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_28]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_40], res1_QE[u_40], csvn_QE[u_40], tdih_QE[u_40], tcbh_QE[u_40], rdata_QE[u_40], res2_QE[u_40]);
          new session_key: key;
          let m: bitstring = key2bitstring(session_key) in
          new r_14: enc_seed;
          let m1_4: bitstring = enc_r2(Zkey, pkgen2_1(k_4[u_8[u_4[u_12[u[u_40]]]]]), r_14) in
          out(c23[i], m1_4)
        )
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_4: keyseed;
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pkgen2_1(k_4), rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_47 = ri_3 <= qH1, u_27 = ri_15 <= qH2 suchthat defined(r_1[ri_3], x111[ri_3], r_4[ri_15], x222[ri_15]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = x222[ri_15]) then
        (
          if (tdih_QE = r_1[u_47]) && (tcbh_QE = r_4[u_27]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_1, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_48 = ri_3 <= qH1, u_25 = ri_13 <= qCPU suchthat defined(r_1[ri_3], x111[ri_3], r_6[ri_13], tcbi_CPU[ri_13]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = tcbi_CPU[ri_13]) then
        (
          if (tdih_QE = r_1[u_48]) && (tcbh_QE = r_6[u_25]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_2: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_2, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_44 = ri_1 <= qTDXM, u_30 = ri_18 <= qH2 suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_4[ri_18], x222[ri_18]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = x222[ri_18]) then
        (
          if (tdih_QE = r_3[u_44]) && (tcbh_QE = r_4[u_30]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_3: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_3, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_45 = ri_1 <= qTDXM, u_28 = ri_16 <= qCPU suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_6[ri_16], tcbi_CPU[ri_16]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = tcbi_CPU[ri_16]) then
        (
          if (tdih_QE = r_3[u_45]) && (tcbh_QE = r_6[u_28]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_4: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_4, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          find [unique] u_46 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying remove assignments of findcond
  - Remove assignments on m (definition removed, all usages removed)
  - Remove assignments on m (definition removed, all usages removed)
  - Remove assignments on m (definition removed, all usages removed)
  - Remove assignments on m (definition removed, all usages removed)
yields

Game 42 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        let m1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_Ch) in
        find u_43 = ri_31 <= qQE suchthat defined(x_1[ri_31], k_4[u_8[u_4[u_12[u[ri_31]]]]], res2_QE[ri_31], rdata_QE[ri_31], tcbh_QE[ri_31], tdih_QE[ri_31], csvn_QE[ri_31], res1_QE[ri_31], rtyp_QE[ri_31], tdr_without_mac_QE[ri_31]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_31]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_43], res1_QE[u_43], csvn_QE[u_43], tdih_QE[u_43], tcbh_QE[u_43], rdata_QE[u_43], res2_QE[u_43]);
          new session_key: key;
          new r_11: enc_seed;
          let m1_1: bitstring = enc_r2(Zkey, pkgen2_1(k_4[u_8[u_4[u_12[u[u_43]]]]]), r_11) in
          out(c23[i], m1_1)
        )
        orfind u_42 = ri_30 <= qQE suchthat defined(x_2[ri_30], k_4[u_8[u_4[u_12[u[ri_30]]]]], res2_QE[ri_30], rdata_QE[ri_30], tcbh_QE[ri_30], tdih_QE[ri_30], csvn_QE[ri_30], res1_QE[ri_30], rtyp_QE[ri_30], tdr_without_mac_QE[ri_30]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_30]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_42], res1_QE[u_42], csvn_QE[u_42], tdih_QE[u_42], tcbh_QE[u_42], rdata_QE[u_42], res2_QE[u_42]);
          new session_key: key;
          new r_12: enc_seed;
          let m1_2: bitstring = enc_r2(Zkey, pkgen2_1(k_4[u_8[u_4[u_12[u[u_42]]]]]), r_12) in
          out(c23[i], m1_2)
        )
        orfind u_41 = ri_29 <= qQE suchthat defined(x_3[ri_29], k_4[u_8[u_4[u_12[u[ri_29]]]]], res2_QE[ri_29], rdata_QE[ri_29], tcbh_QE[ri_29], tdih_QE[ri_29], csvn_QE[ri_29], res1_QE[ri_29], rtyp_QE[ri_29], tdr_without_mac_QE[ri_29]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_29]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_41], res1_QE[u_41], csvn_QE[u_41], tdih_QE[u_41], tcbh_QE[u_41], rdata_QE[u_41], res2_QE[u_41]);
          new session_key: key;
          new r_13: enc_seed;
          let m1_3: bitstring = enc_r2(Zkey, pkgen2_1(k_4[u_8[u_4[u_12[u[u_41]]]]]), r_13) in
          out(c23[i], m1_3)
        )
        orfind u_40 = ri_28 <= qQE suchthat defined(x_4[ri_28], k_4[u_8[u_4[u_12[u[ri_28]]]]], res2_QE[ri_28], rdata_QE[ri_28], tcbh_QE[ri_28], tdih_QE[ri_28], csvn_QE[ri_28], res1_QE[ri_28], rtyp_QE[ri_28], tdr_without_mac_QE[ri_28]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_28]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_40], res1_QE[u_40], csvn_QE[u_40], tdih_QE[u_40], tcbh_QE[u_40], rdata_QE[u_40], res2_QE[u_40]);
          new session_key: key;
          new r_14: enc_seed;
          let m1_4: bitstring = enc_r2(Zkey, pkgen2_1(k_4[u_8[u_4[u_12[u[u_40]]]]]), r_14) in
          out(c23[i], m1_4)
        )
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_4: keyseed;
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pkgen2_1(k_4), rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_47 = ri_3 <= qH1, u_27 = ri_15 <= qH2 suchthat defined(r_1[ri_3], x111[ri_3], r_4[ri_15], x222[ri_15]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = x222[ri_15]) then
        (
          if (tdih_QE = r_1[u_47]) && (tcbh_QE = r_4[u_27]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_1, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_48 = ri_3 <= qH1, u_25 = ri_13 <= qCPU suchthat defined(r_1[ri_3], x111[ri_3], r_6[ri_13], tcbi_CPU[ri_13]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = tcbi_CPU[ri_13]) then
        (
          if (tdih_QE = r_1[u_48]) && (tcbh_QE = r_6[u_25]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_2: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_2, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_44 = ri_1 <= qTDXM, u_30 = ri_18 <= qH2 suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_4[ri_18], x222[ri_18]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = x222[ri_18]) then
        (
          if (tdih_QE = r_3[u_44]) && (tcbh_QE = r_4[u_30]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_3: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_3, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_45 = ri_1 <= qTDXM, u_28 = ri_16 <= qCPU suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_6[ri_16], tcbi_CPU[ri_16]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = tcbi_CPU[ri_16]) then
        (
          if (tdih_QE = r_3[u_45]) && (tcbh_QE = r_6[u_28]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_4: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_4, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
{1938}    find [unique] u_46 = ri_1 <= qTDXM suchthat defined(r_3[ri_1], tdi_TDXM[ri_1]) && (tdi_QE = tdi_TDXM[ri_1]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Applying merge branches
  - Merge all branches of find at 1938
yields

Game 43 is
      in(start, ());
      new ks: skeyseed;
      new mkey: key;
      out(c1, ());
      ((
        ! i <= qChallenger
        in(c20[i], ());
        out(c21[i], ());
        in(c22[i], quote_Ch: quote_t);
        let quote_f(tdr_without_mac_Ch: tdr_without_mac_t, sig_Ch: signature) = quote_Ch in
        let m1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_Ch) in
        find u_43 = ri_31 <= qQE suchthat defined(x_1[ri_31], k_4[u_8[u_4[u_12[u[ri_31]]]]], res2_QE[ri_31], rdata_QE[ri_31], tcbh_QE[ri_31], tdih_QE[ri_31], csvn_QE[ri_31], res1_QE[ri_31], rtyp_QE[ri_31], tdr_without_mac_QE[ri_31]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_31]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_43], res1_QE[u_43], csvn_QE[u_43], tdih_QE[u_43], tcbh_QE[u_43], rdata_QE[u_43], res2_QE[u_43]);
          new session_key: key;
          new r_11: enc_seed;
          let m1_1: bitstring = enc_r2(Zkey, pkgen2_1(k_4[u_8[u_4[u_12[u[u_43]]]]]), r_11) in
          out(c23[i], m1_1)
        )
        orfind u_42 = ri_30 <= qQE suchthat defined(x_2[ri_30], k_4[u_8[u_4[u_12[u[ri_30]]]]], res2_QE[ri_30], rdata_QE[ri_30], tcbh_QE[ri_30], tdih_QE[ri_30], csvn_QE[ri_30], res1_QE[ri_30], rtyp_QE[ri_30], tdr_without_mac_QE[ri_30]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_30]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_42], res1_QE[u_42], csvn_QE[u_42], tdih_QE[u_42], tcbh_QE[u_42], rdata_QE[u_42], res2_QE[u_42]);
          new session_key: key;
          new r_12: enc_seed;
          let m1_2: bitstring = enc_r2(Zkey, pkgen2_1(k_4[u_8[u_4[u_12[u[u_42]]]]]), r_12) in
          out(c23[i], m1_2)
        )
        orfind u_41 = ri_29 <= qQE suchthat defined(x_3[ri_29], k_4[u_8[u_4[u_12[u[ri_29]]]]], res2_QE[ri_29], rdata_QE[ri_29], tcbh_QE[ri_29], tdih_QE[ri_29], csvn_QE[ri_29], res1_QE[ri_29], rtyp_QE[ri_29], tdr_without_mac_QE[ri_29]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_29]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_41], res1_QE[u_41], csvn_QE[u_41], tdih_QE[u_41], tcbh_QE[u_41], rdata_QE[u_41], res2_QE[u_41]);
          new session_key: key;
          new r_13: enc_seed;
          let m1_3: bitstring = enc_r2(Zkey, pkgen2_1(k_4[u_8[u_4[u_12[u[u_41]]]]]), r_13) in
          out(c23[i], m1_3)
        )
        orfind u_40 = ri_28 <= qQE suchthat defined(x_4[ri_28], k_4[u_8[u_4[u_12[u[ri_28]]]]], res2_QE[ri_28], rdata_QE[ri_28], tcbh_QE[ri_28], tdih_QE[ri_28], csvn_QE[ri_28], res1_QE[ri_28], rtyp_QE[ri_28], tdr_without_mac_QE[ri_28]) && (tdr_without_mac_Ch = tdr_without_mac_QE[ri_28]) && check2(m1, pkgen2(ks), sig_Ch) then
        (
          event QuoteVerified(rtyp_QE[u_40], res1_QE[u_40], csvn_QE[u_40], tdih_QE[u_40], tcbh_QE[u_40], rdata_QE[u_40], res2_QE[u_40]);
          new session_key: key;
          new r_14: enc_seed;
          let m1_4: bitstring = enc_r2(Zkey, pkgen2_1(k_4[u_8[u_4[u_12[u[u_40]]]]]), r_14) in
          out(c23[i], m1_4)
        )
      ) | (
        ! iH <= qH1
        in(ch1[iH], x1_1: bitstring);
        let tdi_t2bitstring(x111: tdi_t) = x1_1 in
          find [unique] u_24 = ri_12 <= qH1 suchthat defined(r_1[ri_12], x111[ri_12]) && (x111 = x111[ri_12]) then
            out(ch2[iH], r_1[u_24])
          orfind u_22 = ri_10 <= qTDXM suchthat defined(r_3[ri_10], tdi_TDXM[ri_10]) && (x111 = tdi_TDXM[ri_10]) then
            out(ch2[iH], r_3[u_22])
          else
            new r_1: hashoutput1;
            out(ch2[iH], r_1)
        else
          find [unique] u_20 = ri_8 <= qH1 suchthat defined(r_2[ri_8], x1_1[ri_8]) && (x1_1 = x1_1[ri_8]) then
            out(ch2[iH], r_2[u_20])
          else
            new r_2: hashoutput1;
            out(ch2[iH], r_2)
      ) | (
        ! iH_1 <= qH2
        in(ch1_1[iH_1], x1_2: bitstring);
        let tcbi_t2bitstring(x222: tcbi_t) = x1_2 in
          find [unique] u_39 = ri_27 <= qH2 suchthat defined(r_4[ri_27], x222[ri_27]) && (x222 = x222[ri_27]) then
            out(ch2_1[iH_1], r_4[u_39])
          orfind u_37 = ri_25 <= qCPU suchthat defined(r_6[ri_25], tcbi_CPU[ri_25]) && (x222 = tcbi_CPU[ri_25]) then
            out(ch2_1[iH_1], r_6[u_37])
          else
            new r_4: hashoutput2;
            out(ch2_1[iH_1], r_4)
        else
          find [unique] u_35 = ri_23 <= qH2 suchthat defined(r_5[ri_23], x1_2[ri_23]) && (x1_2 = x1_2[ri_23]) then
            out(ch2_1[iH_1], r_5[u_35])
          else
            new r_5: hashoutput2;
            out(ch2_1[iH_1], r_5)
      ) | (
        ! i_1 <= qTD
        in(c4[i_1], ());
        new k_4: keyseed;
        let rdata_other: user_data_t = get_user_data in
        let rdata_TD: rdata_t = rdata_f(pkgen2_1(k_4), rdata_other) in
        out(c5[i_1], ());
        in(c12[i_1], ());
        find u_10 = u_11 <= qTDXM suchthat defined(tdr_TDXM[u_11]) then
        out(c13[i_1], tdr_TDXM[u_10])
      ) | (
        ! i_2 <= qTDXM
        in(c6[i_2], ());
        let tdi_TDXM: tdi_t = get_tdi in
        find [unique] u_18 = ri_6 <= qH1 suchthat defined(r_1[ri_6], x111[ri_6]) && (tdi_TDXM = x111[ri_6]) then
        (
          let tdih_TDXM: hashoutput1 = r_1[u_18] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        orfind u_16 = ri_4 <= qTDXM suchthat defined(r_3[ri_4]) then
        (
          let tdih_TDXM: hashoutput1 = r_3[u_16] in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
        )
        else
          new r_3: hashoutput1;
          let tdih_TDXM: hashoutput1 = r_3 in
          find u_8 = u_9 <= qTD suchthat defined(rdata_TD[u_9]) then
          (
            let rtyp_TDXM: rtyp_t = get_rtyp in
            out(c7[i_2], ());
            in(c10[i_2], ());
            find u_6 = u_7 <= qCPU suchthat defined(smr_CPU[u_7]) then
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            let res4_TDXM: res_t = get_res in
            let tdr_TDXM: tdr_t = tdr_f(smr_CPU[u_6], res4_TDXM, tdi_TDXM) in
            event TDXMsentTDR_8(smr_CPU[u_6], tdi_TDXM);
            out(c11[i_2], ())
          )
          else
            let rtyp_TDXM: rtyp_t = get_rtyp
      ) | (
        ! i_3 <= qCPU
        in(c8[i_3], ());
        find u_4 = u_5 <= qTDXM suchthat defined(rdata_TD[u_8[u_5]], tdih_TDXM[u_5], rtyp_TDXM[u_5]) then
        let tcbi_CPU: tcbi_t = get_tcbi in
        find [unique] u_33 = ri_21 <= qH2 suchthat defined(r_4[ri_21], x222[ri_21]) && (tcbi_CPU = x222[ri_21]) then
        (
          let tcbh_CPU: hashoutput2 = r_4[u_33] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_4[u_33], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        orfind u_31 = ri_19 <= qCPU suchthat defined(r_6[ri_19]) then
        (
          let tcbh_CPU: hashoutput2 = r_6[u_31] in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6[u_31], rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
        )
        else
          new r_6: hashoutput2;
          let tcbh_CPU: hashoutput2 = r_6 in
          let res2_CPU: res_t = get_res in
          let csvn_CPU: csvn_t = get_csvn in
          let res1_CPU: res_t = get_res in
          let rms_without_mac_CPU: rms_without_mac_t = rms_without_mac_f(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU) in
          let x: bitstring = rms_without_mac_t2bitstring(rms_without_mac_CPU) in
          let ma2: macres_t = mac'(x, mkey) in
          let rms_CPU: rms_t = rms_f(rms_without_mac_CPU, ma2) in
          let smr_CPU: smr_t = smr_f(rms_CPU, tcbi_CPU) in
          event CPUsentSMR(rtyp_TDXM[u_4], res1_CPU, csvn_CPU, tdih_TDXM[u_4], r_6, rdata_TD[u_8[u_4]], res2_CPU, ma2);
          out(c9[i_3], ());
          in(c16[i_3], ());
          find u_2 = u_3 <= qQE suchthat defined(mes_QE_CPU_1[u_3], macres_QE[u_3], rtyp_QE[u_3], res1_QE[u_3], csvn_QE[u_3], tdih_QE[u_3], tcbh_QE[u_3], rdata_QE[u_3], res2_QE[u_3]) then
          find u_12 = ri <= qCPU suchthat defined(ma2[ri], rtyp_TDXM[u_4[ri]], res1_CPU[ri], csvn_CPU[ri], tdih_TDXM[u_4[ri]], tcbh_CPU[ri], rdata_TD[u_8[u_4[ri]]], res2_CPU[ri]) && (res2_QE[u_2] = res2_CPU[ri]) && (rdata_QE[u_2] = rdata_TD[u_8[u_4[ri]]]) && (tcbh_QE[u_2] = tcbh_CPU[ri]) && (tdih_QE[u_2] = tdih_TDXM[u_4[ri]]) && (csvn_QE[u_2] = csvn_CPU[ri]) && (res1_QE[u_2] = res1_CPU[ri]) && (rtyp_QE[u_2] = rtyp_TDXM[u_4[ri]]) && (macres_QE[u_2] = ma2[ri]) then
          let mes_CPU_QE_1: rms_without_mac_t = cst_rms_without_mac_t in
          out(c17[i_3], ())
      ) | (
        ! i_4 <= qQE
        in(c14[i_4], tdr_QE: tdr_t);
        let tdr_f(smr_QE: smr_t, res4_QE: res_t, tdi_QE: tdi_t) = tdr_QE in
        let smr_f(rms_QE: rms_t, tcbi_QE: tcbi_t) = smr_QE in
        let rms_f(rms_without_mac_QE: rms_without_mac_t, macres_QE: macres_t) = rms_QE in
        let rms_without_mac_f(rtyp_QE: rtyp_t, res1_QE: res_t, csvn_QE: csvn_t, tdih_QE: hashoutput1, tcbh_QE: hashoutput2, rdata_QE: rdata_t, res2_QE: res_t) = rms_without_mac_QE in
        find [unique] u_47 = ri_3 <= qH1, u_27 = ri_15 <= qH2 suchthat defined(r_1[ri_3], x111[ri_3], r_4[ri_15], x222[ri_15]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = x222[ri_15]) then
        (
          if (tdih_QE = r_1[u_47]) && (tcbh_QE = r_4[u_27]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_1: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_1, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_48 = ri_3 <= qH1, u_25 = ri_13 <= qCPU suchthat defined(r_1[ri_3], x111[ri_3], r_6[ri_13], tcbi_CPU[ri_13]) && (tdi_QE = x111[ri_3]) && (tcbi_QE = tcbi_CPU[ri_13]) then
        (
          if (tdih_QE = r_1[u_48]) && (tcbh_QE = r_6[u_25]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_2: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_2, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_44 = ri_1 <= qTDXM, u_30 = ri_18 <= qH2 suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_4[ri_18], x222[ri_18]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = x222[ri_18]) then
        (
          if (tdih_QE = r_3[u_44]) && (tcbh_QE = r_4[u_30]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_3: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_3, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        orfind u_45 = ri_1 <= qTDXM, u_28 = ri_16 <= qCPU suchthat defined(r_3[ri_1], tdi_TDXM[ri_1], r_6[ri_16], tcbi_CPU[ri_16]) && (tdi_QE = tdi_TDXM[ri_1]) && (tcbi_QE = tcbi_CPU[ri_16]) then
        (
          if (tdih_QE = r_3[u_45]) && (tcbh_QE = r_6[u_28]) then
          (
            let mes_QE_CPU_1: rms_t = cst_rms_t in
            out(c15[i_4], ());
            in(c18[i_4], ());
            find u = u_1 <= qCPU suchthat defined(mes_CPU_QE_1[u_1], rtyp_QE[u_2[u_1]], res1_QE[u_2[u_1]], csvn_QE[u_2[u_1]], tdih_QE[u_2[u_1]], tcbh_QE[u_2[u_1]], rdata_QE[u_2[u_1]], res2_QE[u_2[u_1]]) && (res2_QE[u_2[u_1]] = res2_QE) && (rdata_QE[u_2[u_1]] = rdata_QE) && (tcbh_QE[u_2[u_1]] = tcbh_QE) && (tdih_QE[u_2[u_1]] = tdih_QE) && (csvn_QE[u_2[u_1]] = csvn_QE) && (res1_QE[u_2[u_1]] = res1_QE) && (rtyp_QE[u_2[u_1]] = rtyp_QE) then
            event eve_QE(rtyp_QE, res1_QE, csvn_QE, tdih_QE, tcbh_QE, rdata_QE, res2_QE);
            event QEaccepted2_14(smr_QE, tdi_QE);
            let smr_without_mac_QE: smr_without_mac_t = smr_without_mac_f(rms_without_mac_QE, tcbi_QE) in
            let tdr_without_mac_QE: tdr_without_mac_t = tdr_without_mac_f(smr_without_mac_QE, res4_QE, tdi_QE) in
            let x_4: bitstring = tdr_without_mac_t2bitstring(tdr_without_mac_QE) in
            let sig_QE: signature = sign2(x_4, skgen2(ks)) in
            let quote_QE: quote_t = quote_f(tdr_without_mac_QE, sig_QE) in
            out(c19[i_4], quote_QE)
          )
          else
            let mes_QE_CPU_1: rms_t = cst_rms_t
        )
        else
          let mes_QE_CPU_1: rms_t = cst_rms_t
      ))


Proved secrecy of session_key in game 43
Proved event(QuoteVerified(x1, x2, x3, x4, x5, x6, x7)) ==> event(CPUsentSMR(x1, x2, x3, x4, x5, x6, x7, x8)) in game 43 up to probability (qTDXM * qH1 + 0.5 * qH1 * qH1 + 0.5 * qTDXM * qTDXM) / |hashoutput1| + (qCPU * qH2 + 0.5 * qH2 * qH2 + 0.5 * qCPU * qCPU) / |hashoutput2|
Proved event(eve_QE(x1, x2, x3, x4, x5, x6, x7)) ==> event(CPUsentSMR(x1, x2, x3, x4, x5, x6, x7, x8)) in game 43 up to probability (qTDXM * qH1 + 0.5 * qH1 * qH1 + 0.5 * qTDXM * qTDXM) / |hashoutput1| + (qCPU * qH2 + 0.5 * qH2 * qH2 + 0.5 * qCPU * qCPU) / |hashoutput2|
Proved event(QuoteVerified(x1, x2, x3, x4, x5, x6, x7)) ==> event(eve_QE(x1, x2, x3, x4, x5, x6, x7)) in game 43 up to probability (qTDXM * qH1 + 0.5 * qH1 * qH1 + 0.5 * qTDXM * qTDXM) / |hashoutput1| + (qCPU * qH2 + 0.5 * qH2 * qH2 + 0.5 * qCPU * qCPU) / |hashoutput2|
Adv[Game 1: secrecy of session_key] <= 2 * qTD * qChallenger * Penc(time_1, 0) + (-1 * qTD + qTD * qTD) * Penccoll + 2 * Psign(time_2, qQE, length(tdr_without_mac_t2bitstring)) + 2 * qQE / |hashoutput2| + 2 * qQE / |hashoutput1| + 2 * Pmac(time_3, qCPU, qCPU, 0, length(rms_without_mac_t2bitstring)) + Adv[Game 43: secrecy of session_key]
Adv[Game 43: secrecy of session_key] <= 0
RESULT Proved secrecy of session_key up to probability 2 * qTD * qChallenger * Penc(time_1, 0) + (-1 * qTD + qTD * qTD) * Penccoll + 2 * Psign(time_2, qQE, length(tdr_without_mac_t2bitstring)) + 2 * qQE / |hashoutput2| + 2 * qQE / |hashoutput1| + 2 * Pmac(time_3, qCPU, qCPU, 0, length(rms_without_mac_t2bitstring))
Adv[Game 1: event(QuoteVerified(x1, x2, x3, x4, x5, x6, x7)) ==> event(CPUsentSMR(x1, x2, x3, x4, x5, x6, x7, x8))] <= qTD * qChallenger * Penc(time_1, 0) + (-0.5 * qTD + 0.5 * qTD * qTD) * Penccoll + Psign(time_2, qQE, length(tdr_without_mac_t2bitstring)) + qQE / |hashoutput2| + qQE / |hashoutput1| + Pmac(time_3, qCPU, qCPU, 0, length(rms_without_mac_t2bitstring)) + Adv[Game 43: event(QuoteVerified(x1, x2, x3, x4, x5, x6, x7)) ==> event(CPUsentSMR(x1, x2, x3, x4, x5, x6, x7, x8))]
Adv[Game 43: event(QuoteVerified(x1, x2, x3, x4, x5, x6, x7)) ==> event(CPUsentSMR(x1, x2, x3, x4, x5, x6, x7, x8))] <= (qTDXM * qH1 + 0.5 * qH1 * qH1 + 0.5 * qTDXM * qTDXM) / |hashoutput1| + (qCPU * qH2 + 0.5 * qH2 * qH2 + 0.5 * qCPU * qCPU) / |hashoutput2|
RESULT Proved event(QuoteVerified(x1, x2, x3, x4, x5, x6, x7)) ==> event(CPUsentSMR(x1, x2, x3, x4, x5, x6, x7, x8)) up to probability qTD * qChallenger * Penc(time_1, 0) + (-0.5 * qTD + 0.5 * qTD * qTD) * Penccoll + Psign(time_2, qQE, length(tdr_without_mac_t2bitstring)) + (qQE + qCPU * qH2 + 0.5 * qH2 * qH2 + 0.5 * qCPU * qCPU) / |hashoutput2| + (qQE + qTDXM * qH1 + 0.5 * qH1 * qH1 + 0.5 * qTDXM * qTDXM) / |hashoutput1| + Pmac(time_3, qCPU, qCPU, 0, length(rms_without_mac_t2bitstring))
Adv[Game 1: event(eve_QE(x1, x2, x3, x4, x5, x6, x7)) ==> event(CPUsentSMR(x1, x2, x3, x4, x5, x6, x7, x8))] <= qTD * qChallenger * Penc(time_1, 0) + (-0.5 * qTD + 0.5 * qTD * qTD) * Penccoll + Psign(time_2, qQE, length(tdr_without_mac_t2bitstring)) + qQE / |hashoutput2| + qQE / |hashoutput1| + Pmac(time_3, qCPU, qCPU, 0, length(rms_without_mac_t2bitstring)) + Adv[Game 43: event(eve_QE(x1, x2, x3, x4, x5, x6, x7)) ==> event(CPUsentSMR(x1, x2, x3, x4, x5, x6, x7, x8))]
Adv[Game 43: event(eve_QE(x1, x2, x3, x4, x5, x6, x7)) ==> event(CPUsentSMR(x1, x2, x3, x4, x5, x6, x7, x8))] <= (qTDXM * qH1 + 0.5 * qH1 * qH1 + 0.5 * qTDXM * qTDXM) / |hashoutput1| + (qCPU * qH2 + 0.5 * qH2 * qH2 + 0.5 * qCPU * qCPU) / |hashoutput2|
RESULT Proved event(eve_QE(x1, x2, x3, x4, x5, x6, x7)) ==> event(CPUsentSMR(x1, x2, x3, x4, x5, x6, x7, x8)) up to probability qTD * qChallenger * Penc(time_1, 0) + (-0.5 * qTD + 0.5 * qTD * qTD) * Penccoll + Psign(time_2, qQE, length(tdr_without_mac_t2bitstring)) + (qQE + qCPU * qH2 + 0.5 * qH2 * qH2 + 0.5 * qCPU * qCPU) / |hashoutput2| + (qQE + qTDXM * qH1 + 0.5 * qH1 * qH1 + 0.5 * qTDXM * qTDXM) / |hashoutput1| + Pmac(time_3, qCPU, qCPU, 0, length(rms_without_mac_t2bitstring))
Adv[Game 1: event(QuoteVerified(x1, x2, x3, x4, x5, x6, x7)) ==> event(eve_QE(x1, x2, x3, x4, x5, x6, x7))] <= qTD * qChallenger * Penc(time_1, 0) + (-0.5 * qTD + 0.5 * qTD * qTD) * Penccoll + Psign(time_2, qQE, length(tdr_without_mac_t2bitstring)) + qQE / |hashoutput2| + qQE / |hashoutput1| + Pmac(time_3, qCPU, qCPU, 0, length(rms_without_mac_t2bitstring)) + Adv[Game 43: event(QuoteVerified(x1, x2, x3, x4, x5, x6, x7)) ==> event(eve_QE(x1, x2, x3, x4, x5, x6, x7))]
Adv[Game 43: event(QuoteVerified(x1, x2, x3, x4, x5, x6, x7)) ==> event(eve_QE(x1, x2, x3, x4, x5, x6, x7))] <= (qTDXM * qH1 + 0.5 * qH1 * qH1 + 0.5 * qTDXM * qTDXM) / |hashoutput1| + (qCPU * qH2 + 0.5 * qH2 * qH2 + 0.5 * qCPU * qCPU) / |hashoutput2|
RESULT Proved event(QuoteVerified(x1, x2, x3, x4, x5, x6, x7)) ==> event(eve_QE(x1, x2, x3, x4, x5, x6, x7)) up to probability qTD * qChallenger * Penc(time_1, 0) + (-0.5 * qTD + 0.5 * qTD * qTD) * Penccoll + Psign(time_2, qQE, length(tdr_without_mac_t2bitstring)) + (qQE + qCPU * qH2 + 0.5 * qH2 * qH2 + 0.5 * qCPU * qCPU) / |hashoutput2| + (qQE + qTDXM * qH1 + 0.5 * qH1 * qH1 + 0.5 * qTDXM * qTDXM) / |hashoutput1| + Pmac(time_3, qCPU, qCPU, 0, length(rms_without_mac_t2bitstring))
RESULT time_1 = time(context for game 37) + time + (-1 + qTD * qChallenger) * time(enc_r, maxlength(game 37: m)) + (-1 + qTD) * time(skgen) + (-1 + qTD) * time(pkgen)
RESULT time_2 = time(context for game 27) + time + (-1 + qChallenger) * time(verify, length(tdr_without_mac_t2bitstring))
RESULT time_3 = time(context for game 6) + time
RESULT time(context for game 6) = time(sskgen) + time(spkgen) + qChallenger * time(let quote_f) + qChallenger * time(verify, length(tdr_without_mac_t2bitstring)) + (qChallenger + qQE) * time(tdr_without_mac_t2bitstring) + qChallenger * time(let tdr_without_mac_f) + qChallenger * time(let smr_without_mac_f) + (qChallenger + qQE) * time(let rms_without_mac_f) + qChallenger * time(let rdata_f) + qChallenger * time(([1,qChallenger])) + qChallenger * time(key2bitstring) + qChallenger * time(enc_r, maxlength(game 6: m)) + qH1 * time(hash1, maxlength(game 6: x1_1)) + qH2 * time(hash2, maxlength(game 6: x1_2)) + qTD * time(pkgen) + qTD * time(rdata_f) + (qTDXM + qQE) * time(hash1, length(tdi_t2bitstring)) + (qTDXM + qQE) * time(tdi_t2bitstring) + qTDXM * time(tdr_f) + 2 * qTDXM * time(([1,qTDXM])) + (qCPU + qQE) * time(hash2, length(tcbi_t2bitstring)) + (qCPU + qQE) * time(tcbi_t2bitstring) + qCPU * time(rms_without_mac_f) + qCPU * time(rms_f) + qCPU * time(smr_f) + qCPU * time(([1,qCPU])) + 2 * qCPU * time(rms_without_mac_t2bitstring) + qQE * time(let tdr_f) + qQE * time(let smr_f) + qQE * time(let rms_f) + 2 * qQE * time(([1,qQE])) + qQE * time(smr_without_mac_f) + qQE * time(tdr_without_mac_f) + qQE * time(sign, length(tdr_without_mac_t2bitstring)) + qQE * time(quote_f)
RESULT time(context for game 27) = qChallenger * time(let quote_f) + (qChallenger + qQE) * time(tdr_without_mac_t2bitstring) + qChallenger * time(let tdr_without_mac_f) + qChallenger * time(let smr_without_mac_f) + (qChallenger + qQE) * time(let rms_without_mac_f) + qChallenger * time(let rdata_f) + qChallenger * time(([1,qChallenger])) + qChallenger * time(key2bitstring) + qChallenger * time(enc_r, maxlength(game 27: m)) + qH1 * time(let tdi_t2bitstring) + qH1 * qH1 * time(= bitstring, maxlength(game 27: x1_1), maxlength(game 27: x1_1)) + qH2 * time(let tcbi_t2bitstring) + qH2 * qH2 * time(= bitstring, maxlength(game 27: x1_2), maxlength(game 27: x1_2)) + qTD * time(pkgen) + qTD * time(rdata_f) + qTDXM * time(tdr_f) + 2 * qTDXM * time(([1,qTDXM])) + qCPU * time(rms_without_mac_f) + qCPU * time(rms_without_mac_t2bitstring) + qCPU * time(mac', maxlength(game 27: x)) + qCPU * time(rms_f) + qCPU * time(smr_f) + qCPU * time(([1,qCPU])) + qQE * time(let tdr_f) + qQE * time(let smr_f) + qQE * time(let rms_f) + 2 * qQE * time(([1,qQE])) + qQE * time(smr_without_mac_f) + qQE * time(tdr_without_mac_f) + qQE * time(quote_f)
RESULT time(context for game 37) = qChallenger * time(let quote_f) + (qChallenger + qQE) * time(tdr_without_mac_t2bitstring) + 4 * qChallenger * qQE * time(pkgen2) + 4 * qChallenger * qQE * time(check2, maxlength(game 37: m1)) + qChallenger * time(([1,qChallenger])) + qChallenger * time(key2bitstring) + qH1 * time(let tdi_t2bitstring) + qH1 * qH1 * time(= bitstring, maxlength(game 37: x1_1), maxlength(game 37: x1_1)) + qH2 * time(let tcbi_t2bitstring) + qH2 * qH2 * time(= bitstring, maxlength(game 37: x1_2), maxlength(game 37: x1_2)) + qTD * time(rdata_f) + qTDXM * time(tdr_f) + 2 * qTDXM * time(([1,qTDXM])) + qCPU * time(rms_without_mac_f) + qCPU * time(rms_without_mac_t2bitstring) + qCPU * time(mac', maxlength(game 37: x)) + qCPU * time(rms_f) + qCPU * time(smr_f) + qCPU * time(([1,qCPU])) + qQE * time(let tdr_f) + qQE * time(let smr_f) + qQE * time(let rms_f) + qQE * time(let rms_without_mac_f) + qQE * time(sign2, maxlength(game 37: x_1)) + qQE * time(sign2, maxlength(game 37: x_2)) + qQE * time(sign2, maxlength(game 37: x_3)) + 2 * qQE * time(([1,qQE])) + qQE * time(smr_without_mac_f) + qQE * time(tdr_without_mac_f) + qQE * time(sign2, maxlength(game 37: x_4)) + qQE * time(skgen2) + qQE * time(quote_f)
RESULT Could not prove event(QEaccepted2_14(x1, x2)) ==> event(TDXMsentTDR_8(x1, x2)).
